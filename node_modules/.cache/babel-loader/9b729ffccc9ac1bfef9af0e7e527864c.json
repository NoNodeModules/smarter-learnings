{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\AdminData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, DeleteForm, UpdateForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask; // console.log(tasks);\n}\n\nfunction PostUpdateAdmin(RowAdminData) {\n  axios.post('http://103.142.165.146:8080/smarter-learnings/admins/', RowAdminData).then(response => {\n    window.location.reload();\n  }).catch(error => {\n    toast('Its time to Grab A Coffee');\n  });\n}\n\n_c2 = PostUpdateAdmin;\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"admin_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"admin_name\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"admin_email\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"admin_permissions\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    PostUpdateAdmin(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.admin_id === data.admin_id);\n    task.admin_name = data.admin_name;\n    task.admin_email = data.admin_email;\n    task.admin_phone_number = data.admin_phone_number;\n    task.admin_permissions = data.admin_permissions;\n    task.admin_photo = data.admin_photo;\n    PostUpdateAdmin(task);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Admintest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"ADMINS\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"admin_id\",\n        label: \"Admin ID\",\n        placeholder: \"Admin ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"admin_name\",\n        label: \"Name\",\n        placeholder: \" Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"admin_email\",\n        label: \"Email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"admin_phone_number\",\n        label: \"Phone Number\",\n        placeholder: \"Phone Number\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"admin_permissions\",\n        label: \"Permissions\",\n        placeholder: \"Permissions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Admin Update Process\",\n      message: \"Update Admin\",\n      trigger: \"Update\",\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.admin_id) {\n          errors.admin_id = \"Please, provide Admin ID\";\n        }\n\n        if (!values.admin_name) {\n          errors.admin_name = \"Please, provide Admin name\";\n        }\n\n        if (!values.admin_email) {\n          errors.admin_email = \"Please, provide Admin Email\";\n        }\n\n        if (!values.admin_phone_number) {\n          errors.admin_phone_number = \"Please, provide Admin Phone Number\";\n        }\n\n        if (!values.admin_permissions) {\n          errors.admin_permissions = \"Please, provide Admin Permissions\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 7,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 123,\n  columnNumber: 3\n}, this);\n\n_c3 = Admintest;\n\nclass AdminData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Admintest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"PostUpdateAdmin\");\n$RefreshReg$(_c3, \"Admintest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/AdminData.js"],"names":["React","axios","Component","ToastContainer","toast","CRUDTable","Fields","Field","DeleteForm","UpdateForm","Pagination","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","PostUpdateAdmin","RowAdminData","post","then","response","window","location","reload","catch","error","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","data","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","admin_id","admin_name","admin_email","admin_phone_number","admin_permissions","admin_photo","styles","container","margin","width","Admintest","values","errors","AdminData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, {\n  Fields,\n  Field,\n  DeleteForm,\n  UpdateForm,\n  Pagination\n} from \"react-crud-table\";\n\ntoast.configure()\n\n// Component's Base CSS\n//import \"./index.css\";\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\nconsole.log();\nlet tasks = [];\n\nfunction  getTask(testTask){\n  tasks = testTask;\n  // console.log(tasks);\n}\n\nfunction PostUpdateAdmin(RowAdminData){\naxios\n      .post('http://103.142.165.146:8080/smarter-learnings/admins/', RowAdminData )\n      .then(response => {\n        window.location.reload();\n      })\n      .catch(error => {\n        toast('Its time to Grab A Coffee')\n      })\n}\n \nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"admin_id\") {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  } \n  else if (data.field === \"admin_name\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"admin_email\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"admin_permissions\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.NUMBER_ASCENDING(mapper)\n        : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\n// let count = tasks.length;\n// console.log(count);\nconst service = {\n  fetchItems: payload => {\n    const { activePage, itemsPerPage } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({\n     });\n     PostUpdateAdmin(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.admin_id === data.admin_id);\n    task.admin_name =  data.admin_name;\n    task.admin_email = data.admin_email;\n    task.admin_phone_number = data.admin_phone_number;\n    task.admin_permissions = data.admin_permissions;\n    task.admin_photo = data.admin_photo;\n    PostUpdateAdmin(task);\n    return Promise.resolve(task);\n  }\n};\n\nconst styles = {\n  container: { margin: \"auto\", width: \"fit-content\" }\n};\n\nconst Admintest = () => (\n  \n  \n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"ADMINS\"\n      fetchItems={payload => service.fetchItems(payload)}\n    >\n      <Fields>\n        <Field name=\"admin_id\" label=\"Admin ID\" placeholder=\"Admin ID\" readOnly />\n        <Field name=\"admin_name\" label=\"Name\" placeholder=\" Name\"  />\n        <Field name=\"admin_email\" label=\"Email\" placeholder=\"Email\"/>\n        <Field name=\"admin_phone_number\" label=\"Phone Number\" placeholder=\"Phone Number\" type=\"number\" />\n        <Field name=\"admin_permissions\" label=\"Permissions\" placeholder=\"Permissions\"/>\n      </Fields>\n      <UpdateForm\n        title=\"Admin Update Process\"\n        message=\"Update Admin\"\n        trigger=\"Update\"\n        onSubmit={task => service.update(task)}\n        submitText=\"Update\"\n        validate={values => {\n          const errors = {};\n\n          if (!values.admin_id) {\n            errors.admin_id = \"Please, provide Admin ID\";\n          }\n\n          if (!values.admin_name) {\n            errors.admin_name = \"Please, provide Admin name\";\n          }\n\n          if (!values.admin_email) {\n            errors.admin_email = \"Please, provide Admin Email\";\n          }\n\n          if (!values.admin_phone_number) {\n            errors.admin_phone_number = \"Please, provide Admin Phone Number\";\n          }\n          if (!values.admin_permissions) {\n            errors.admin_permissions = \"Please, provide Admin Permissions\";\n          }\n\n          return errors;\n        }}\n      />\n  <Pagination\n        itemsPerPage={7}\n        activePage = {1}\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\n      />\n    </CRUDTable>\n  </div>\n\n)\n\n\nclass AdminData extends Component {\n    constructor(props) {\n        super(props); \n        getTask(this.props.data);\n        }\n    render() { \n      return ( <div>\n      <Admintest/> \n      </div>\n      );\n    }\n  }\n   \n  export default AdminData;"]},"metadata":{},"sourceType":"module"}