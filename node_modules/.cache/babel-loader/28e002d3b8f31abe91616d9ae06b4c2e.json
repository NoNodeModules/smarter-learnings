{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\AdminStudentsData .js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, DeleteForm, UpdateForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\n\nfunction deletestudent(AdminStudentsRow) {\n  const url = 'http://103.142.165.146:8080/smarter-learnings/students/' + AdminStudentsRow.student_id;\n  axios.delete(url).then(response => {\n    if (response.status == 200) {\n      window.location.reload(\"/\");\n    } else {\n      toast('Delete Failed');\n    }\n  }).catch(error => {\n    toast(\"It's Time To Grab A coffee\");\n  });\n}\n\nlet tasks = [];\n\nfunction getTask(testTask) {\n  console.log(testTask);\n  tasks = testTask;\n}\n\nfunction PostUpdateStudent(AdminStudentsRow) {\n  console.log(AdminStudentsRow);\n  axios.post('http://103.142.165.146:8080/smarter-learnings/students/', AdminStudentsRow).then(response => {\n    window.location.reload();\n  }).catch(error => {\n    toast('Update Failed');\n  });\n}\n\n_c2 = PostUpdateStudent;\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"student_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"name\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"email\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"fathers_name\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"mother_name\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"address\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"gender\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"educational_qualification\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    PostUpdateStudent(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.student_id === data.student_id);\n    task.name = data.name;\n    task.email = data.email;\n    task.phone_number = data.phone_number;\n    task.fathers_name = data.fathers_name;\n    task.mother_name = data.mother_name;\n    task.address = data.address;\n    task.gender = data.gender;\n    task.alt_number = data.alt_number;\n    task.institution = data.institution;\n    task.educational_qualification = data.educational_qualification;\n    task.photo = data.photo;\n    task.professional_exp = data.professional_exp;\n    task.updated_date_time = data.updated_date_time;\n    task.dob = data.dob;\n    task.created_date_time = data.created_date_time;\n    task.createdBy = data.createdBy;\n    task.updatedBy = data.updatedBy;\n    PostUpdateStudent(task);\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.student_id === data.student_id);\n    deletestudent(task);\n    tasks = tasks.filter(t => t.student_id !== task.student_id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst StudentsTest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"STUDENTS\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"student_id\",\n        label: \"Student ID\",\n        placeholder: \"Student ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"name\",\n        label: \"Name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        label: \"Email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"phone_number\",\n        label: \"Phone Number\",\n        placeholder: \"Phone Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"fathers_name\",\n        label: \"Father's Name\",\n        placeholder: \"Father's Name\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"mother_name\",\n        label: \"Mother's Name\",\n        placeholder: \"Mother's Name\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"address\",\n        label: \"Address\",\n        placeholder: \"Address\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"gender\",\n        label: \"Gender\",\n        placeholder: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"dob\",\n        label: \"Date Of Birth\",\n        placeholder: \"Date Of Birth\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"alt_number\",\n        label: \"Alternate Number\",\n        placeholder: \"Alternate Number\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"institution\",\n        label: \"Institution\",\n        placeholder: \"Institution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"educational_qualification\",\n        label: \"Educational qualification\",\n        placeholder: \"Educational Qualification\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"photo\",\n        label: \"Photo\",\n        placeholder: \"Photo\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"professional_exp\",\n        label: \"Professional Experience\",\n        placeholder: \"Professional Experience\",\n        hideFromTable: true,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"created_date_time\",\n        label: \"Created Date And Time\",\n        placeholder: \"Created Date And Time\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"updated_date_time\",\n        label: \"Updated Date And Time\",\n        placeholder: \"Updated Date And Time\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"updatedBy\",\n        label: \"Updated By\",\n        placeholder: \"Updated By\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"createdBy\",\n        label: \"Created By\",\n        placeholder: \"Created By\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Student Update Process\",\n      message: \"Update Student\",\n      trigger: \"Update\",\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.student_id) {\n          errors.student_id = \"Please, provide Student ID\";\n        }\n\n        if (!values.name) {\n          errors.name = \"Please, provide Name\";\n        }\n\n        if (!values.email) {\n          errors.email = \"Please, provide Email\";\n        }\n\n        if (!values.phone_number) {\n          errors.phone_number = \"Please, provide Phone Number\";\n        }\n\n        if (!values.fathers_name) {\n          errors.fathers_name = \"Please, provide Father's Name\";\n        }\n\n        if (!values.mother_name) {\n          errors.mother_name = \"Please, provide Mother's Name\";\n        }\n\n        if (!values.address) {\n          errors.address = \"Please, provide Address\";\n        }\n\n        if (!values.gender) {\n          errors.gender = \"Please, provide Gender\";\n        }\n\n        if (!values.dob) {\n          errors.dob = \"Please, provide Date Of Birth\";\n        }\n\n        if (!values.alt_number) {\n          errors.alt_number = \"Please, provide Alternate Number\";\n        }\n\n        if (!values.institution) {\n          errors.institution = \"Please, provide Institution Details\";\n        }\n\n        if (!values.educational_qualification) {\n          errors.educational_qualification = \"Please, provide Qualification Details\";\n        }\n\n        if (!values.photo) {\n          errors.photo = \"Please, provide Photo\";\n        }\n\n        if (!values.professional_exp) {\n          errors.professional_exp = \"Please, provide Experience Details\";\n        }\n\n        if (!values.created_date_time) {\n          errors.created_date_time = \"Please, provide Created Date And Timr Info\";\n        }\n\n        if (!values.updated_date_time) {\n          errors.updated_date_time = \"Please, provide Updated Date And Timr Info\";\n        }\n\n        if (!values.updatedBy) {\n          errors.updatedBy = \"Please, provide Updated By Details\";\n        }\n\n        if (!values.createdBy) {\n          errors.createdBy = \"Please, provide Created By Details\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n      title: \"Student Delete Process\",\n      message: \"Are you sure you want to delete the Student?\",\n      trigger: \"Delete\",\n      onSubmit: task => service.delete(task),\n      submitText: \"Delete\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.student_id) {\n          errors.student_id = \"Please, provide Student ID\";\n        }\n\n        if (!values.name) {\n          errors.name = \"Please, provide Name\";\n        }\n\n        if (!values.email) {\n          errors.email = \"Please, provide Email\";\n        }\n\n        if (!values.phone_number) {\n          errors.phone_number = \"Please, provide Phone Number\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 187,\n  columnNumber: 3\n}, this);\n\n_c3 = StudentsTest;\n\nclass AdminStudentsData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StudentsTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminStudentsData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"PostUpdateStudent\");\n$RefreshReg$(_c3, \"StudentsTest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/AdminStudentsData .js"],"names":["React","axios","Component","ToastContainer","toast","CRUDTable","Fields","Field","CreateForm","DeleteForm","UpdateForm","Pagination","configure","DescriptionRenderer","field","console","log","deletestudent","AdminStudentsRow","url","student_id","delete","then","response","status","window","location","reload","catch","error","tasks","getTask","testTask","PostUpdateStudent","post","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","data","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","name","email","phone_number","fathers_name","mother_name","address","gender","alt_number","institution","educational_qualification","photo","professional_exp","updated_date_time","dob","created_date_time","createdBy","updatedBy","filter","styles","container","margin","width","StudentsTest","values","errors","AdminStudentsData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../CRUDTable.css\";\r\nimport { Component } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  DeleteForm,\r\n  UpdateForm,\r\n  Pagination\r\n} from \"react-crud-table\";\r\n\r\ntoast.configure()\r\n\r\n// Component's Base CSS\r\n//import \"./index.css\";\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\nconsole.log();\r\n\r\nfunction deletestudent(AdminStudentsRow){\r\n    const url = 'http://103.142.165.146:8080/smarter-learnings/students/' + AdminStudentsRow.student_id;\r\n  axios\r\n        .delete(url)\r\n        .then(response => {\r\n          if(response.status==200){\r\n            window.location.reload(\"/\");\r\n           }\r\n           else{\r\n             toast('Delete Failed')\r\n           }\r\n        })\r\n        .catch(error => {\r\n          toast(\"It's Time To Grab A coffee\")\r\n        })\r\n}\r\n\r\nlet tasks = [];\r\n\r\nfunction getTask(testTask){\r\n    console.log(testTask);\r\n    tasks = testTask;\r\n}\r\n\r\nfunction PostUpdateStudent(AdminStudentsRow){\r\n    console.log(AdminStudentsRow);\r\naxios\r\n      .post('http://103.142.165.146:8080/smarter-learnings/students/', AdminStudentsRow )\r\n      .then(response => {\r\n        window.location.reload();\r\n      })\r\n      .catch(error => {\r\n\r\n        toast('Update Failed')\r\n      })\r\n}\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n    const mapper = x => x[data.field];\r\n    let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n  \r\n    if (data.field === \"student_id\") {\r\n      sorter =\r\n        data.direction === \"ascending\"\r\n          ? SORTERS.STRING_ASCENDING(mapper)\r\n          : SORTERS.STRING_DESCENDING(mapper);\r\n    } \r\n    else if (data.field === \"name\"){\r\n      sorter =\r\n        data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n    }\r\n    else if (data.field === \"email\"){\r\n      sorter =\r\n        data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n    }\r\n    else if (data.field === \"fathers_name\"){\r\n      sorter =\r\n        data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n    }\r\n    else if (data.field === \"mother_name\"){\r\n      sorter =\r\n        data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n    }\r\n    else if (data.field === \"address\"){\r\n        sorter =\r\n          data.direction === \"ascending\"\r\n          ? SORTERS.STRING_ASCENDING(mapper)\r\n          : SORTERS.STRING_DESCENDING(mapper);\r\n      }\r\n      else if (data.field === \"gender\"){\r\n        sorter =\r\n          data.direction === \"ascending\"\r\n          ? SORTERS.STRING_ASCENDING(mapper)\r\n          : SORTERS.STRING_DESCENDING(mapper);\r\n      }\r\n      else if (data.field === \"educational_qualification\"){\r\n        sorter =\r\n          data.direction === \"ascending\"\r\n          ? SORTERS.STRING_ASCENDING(mapper)\r\n          : SORTERS.STRING_DESCENDING(mapper);\r\n      }\r\n      \r\n    else {\r\n      sorter =\r\n        data.direction === \"ascending\"\r\n          ? SORTERS.NUMBER_ASCENDING(mapper)\r\n          : SORTERS.NUMBER_DESCENDING(mapper);\r\n    }\r\n  \r\n    return sorter;\r\n  };\r\n\r\n// let count = tasks.length;\r\n// console.log(count);\r\nconst service = {\r\n  fetchItems: payload => {\r\n    const { activePage, itemsPerPage } = payload.pagination;\r\n    const start = (activePage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result.slice(start, end));\r\n  },\r\n  fetchTotal: payload => {\r\n    return Promise.resolve(tasks.length);\r\n  },\r\n  create: task => {\r\n    tasks.push({\r\n     });\r\n     PostUpdateStudent(task);\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.student_id === data.student_id);\r\n    task.name = data.name;\r\n    task.email = data.email;\r\n    task.phone_number = data.phone_number;\r\n    task.fathers_name = data.fathers_name;\r\n    task.mother_name = data.mother_name;\r\n    task.address = data.address;\r\n    task.gender = data.gender;\r\n    task.alt_number = data.alt_number;\r\n    task.institution = data.institution;\r\n    task.educational_qualification = data.educational_qualification;\r\n    task.photo = data.photo;\r\n    task.professional_exp = data.professional_exp;\r\n    task.updated_date_time = data.updated_date_time;\r\n    task.dob = data.dob;\r\n    task.created_date_time = data.created_date_time;\r\n    task.createdBy = data.createdBy;\r\n    task.updatedBy = data.updatedBy;\r\n\r\n    PostUpdateStudent(task);\r\n    return Promise.resolve(task);\r\n  },\r\n  delete: data => {\r\n     const task = tasks.find(t => t.student_id === data.student_id);\r\n     deletestudent(task);\r\n     tasks = tasks.filter(t => t.student_id !== task.student_id);\r\n     return Promise.resolve(task);\r\n   }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst StudentsTest = () => (\r\n  \r\n  \r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"STUDENTS\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"student_id\" label=\"Student ID\" placeholder=\"Student ID\" readOnly/>\r\n        <Field name=\"name\" label=\"Name\" placeholder=\"Name\"  />\r\n        <Field name=\"email\" label=\"Email\" placeholder=\"Email\" />\r\n        <Field name=\"phone_number\" label=\"Phone Number\" placeholder=\"Phone Number\" />\r\n        <Field name=\"fathers_name\" label=\"Father's Name\" placeholder=\"Father's Name\" hideFromTable />\r\n        <Field name=\"mother_name\" label=\"Mother's Name\" placeholder=\"Mother's Name\" hideFromTable/>\r\n        <Field name=\"address\" label=\"Address\" placeholder=\"Address\" hideFromTable/>\r\n        <Field name=\"gender\" label=\"Gender\" placeholder=\"Gender\" />\r\n        <Field name=\"dob\" label=\"Date Of Birth\" placeholder=\"Date Of Birth\" hideFromTable/>\r\n        <Field name=\"alt_number\" label=\"Alternate Number\" placeholder=\"Alternate Number\" hideFromTable/>\r\n        <Field name=\"institution\" label=\"Institution\" placeholder=\"Institution\" />\r\n        <Field name=\"educational_qualification\" label=\"Educational qualification\" placeholder=\"Educational Qualification\" hideFromTable/>\r\n        <Field name=\"photo\" label=\"Photo\" placeholder=\"Photo\" hideFromTable/>\r\n        <Field name=\"professional_exp\" label=\"Professional Experience\" placeholder=\"Professional Experience\"hideFromTable type=\"number\" />\r\n        <Field name=\"created_date_time\" label=\"Created Date And Time\" placeholder=\"Created Date And Time\" hideFromTable />\r\n        <Field name=\"updated_date_time\" label=\"Updated Date And Time\" placeholder=\"Updated Date And Time\" hideFromTable/>\r\n        <Field name=\"updatedBy\" label=\"Updated By\" placeholder=\"Updated By\" hideFromTable />\r\n        <Field name=\"createdBy\" label=\"Created By\" placeholder=\"Created By\" hideFromTable/>\r\n\r\n      </Fields>\r\n      {/* <CreateForm\r\n        title=\"Student Creation\"\r\n        message=\"Create a new Student!\"\r\n        trigger=\"Create Student\"\r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n              if (!values.student_id) {\r\n            errors.student_id = \"Please, provide Student ID\";\r\n          }\r\n\r\n          if (!values.name) {\r\n            errors.student_id = \"Please, provide Course Description\";\r\n          }\r\n\r\n          if (!values.email) {\r\n            errors.email = \"Please, provide Course Type\";\r\n          }\r\n\r\n          if (!values.phone_number) {\r\n            errors.phone_number = \"Please, provide Course SubType\";\r\n          }\r\n          if (!values.fathers_name) {\r\n            errors.fathers_name = \"Please, provide Course Fees\";\r\n          }\r\n          if (!values.mother_name) {\r\n            errors.mother_name = \"Please, provide Course Duration\";\r\n          }\r\n          if (!values.address) {\r\n            errors.address = \"Please, provide Admin ID\";\r\n          }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      /> */}\r\n\r\n      <UpdateForm\r\n        title=\"Student Update Process\"\r\n        message=\"Update Student\"\r\n        trigger=\"Update\"\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.student_id) {\r\n            errors.student_id = \"Please, provide Student ID\";\r\n          }\r\n\r\n          if (!values.name) {\r\n            errors.name = \"Please, provide Name\";\r\n          }\r\n\r\n          if (!values.email) {\r\n            errors.email = \"Please, provide Email\";\r\n          }\r\n\r\n          if (!values.phone_number) {\r\n            errors.phone_number = \"Please, provide Phone Number\";\r\n          }\r\n          if (!values.fathers_name) {\r\n            errors.fathers_name = \"Please, provide Father's Name\";\r\n          }\r\n          if (!values.mother_name) {\r\n            errors.mother_name = \"Please, provide Mother's Name\";\r\n          }\r\n          if (!values.address) {\r\n            errors.address = \"Please, provide Address\";\r\n          }\r\n          if (!values.gender) {\r\n            errors.gender = \"Please, provide Gender\";\r\n          }\r\n          if (!values.dob) {\r\n            errors.dob = \"Please, provide Date Of Birth\";\r\n          }\r\n          if (!values.alt_number) {\r\n            errors.alt_number = \"Please, provide Alternate Number\";\r\n          }\r\n          if (!values.institution) {\r\n            errors.institution = \"Please, provide Institution Details\";\r\n          }\r\n          if (!values.educational_qualification) {\r\n            errors.educational_qualification = \"Please, provide Qualification Details\";\r\n          }\r\n          if (!values.photo) {\r\n            errors.photo = \"Please, provide Photo\";\r\n          }\r\n          if (!values.professional_exp) {\r\n            errors.professional_exp = \"Please, provide Experience Details\";\r\n          }\r\n          if (!values.created_date_time) {\r\n            errors.created_date_time = \"Please, provide Created Date And Timr Info\";\r\n          }\r\n          if (!values.updated_date_time) {\r\n            errors.updated_date_time = \"Please, provide Updated Date And Timr Info\";\r\n          }\r\n          if (!values.updatedBy) {\r\n            errors.updatedBy = \"Please, provide Updated By Details\";\r\n          }\r\n          if (!values.createdBy) {\r\n            errors.createdBy = \"Please, provide Created By Details\";\r\n          }\r\n\r\n\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <DeleteForm\r\n        title=\"Student Delete Process\"\r\n        message=\"Are you sure you want to delete the Student?\"\r\n        trigger=\"Delete\"\r\n        onSubmit={task => service.delete(task)}\r\n        submitText=\"Delete\"\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.student_id) {\r\n            errors.student_id = \"Please, provide Student ID\";\r\n          }\r\n\r\n          if (!values.name) {\r\n            errors.name = \"Please, provide Name\";\r\n          }\r\n\r\n          if (!values.email) {\r\n            errors.email = \"Please, provide Email\";\r\n          }\r\n\r\n          if (!values.phone_number) {\r\n            errors.phone_number = \"Please, provide Phone Number\";\r\n          }\r\n          return errors;\r\n        }}\r\n      />\r\n      <Pagination\r\n        itemsPerPage={10}\r\n        activePage = {1}\r\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nclass AdminStudentsData extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        getTask(this.props.data);\r\n        }\r\n    render() { \r\n      return ( <div>\r\n      <StudentsTest/> \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default AdminStudentsData;"]},"metadata":{},"sourceType":"module"}