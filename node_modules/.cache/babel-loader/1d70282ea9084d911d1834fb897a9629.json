{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\AdminAssetsData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm, Pagination } from \"react-crud-table\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\nconst sessiondetails = JSON.parse(localStorage.getItem(\"sessiondetails\")); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask; // console.log(tasks);\n}\n\nfunction Postassets(AdminAssetsRow) {\n  var senddata = {\n    assets_id: AdminAssetsRow.assets_id,\n    admin_id: sessiondetails.user,\n    assets_cost: AdminAssetsRow.assets_cost,\n    assets_name: AdminAssetsRow.assets_name,\n    assets_purchased_date: AdminAssetsRow.assets_purchased_date,\n    assets_count: AdminAssetsRow.assets_count,\n    grade: AdminAssetsRow.grade,\n    gst: AdminAssetsRow.gst\n  };\n  axios.post('http://103.142.165.146:8080//smarter-learnings/assets/', senddata).then(response => {\n    if (response.data.status == \"Success\") {\n      window.location.reload(\"/\");\n    } else {\n      toast('Update Failed');\n    }\n  }).catch(error => {\n    toast('Update Failed');\n  });\n}\n\n_c2 = Postassets;\n\nfunction deleteassets(AdminAssetsRow) {\n  console.log(AdminAssetsRow.assets_id);\n  const url = 'http://103.142.165.146:8080//smarter-learnings/assets/' + AdminAssetsRow.assets_id;\n  axios.delete(url).then(response => {\n    if (response.status == 200) {\n      window.location.reload(\"/\");\n    } else {\n      toast('Delete Failed');\n    }\n  }).catch(error => {\n    toast('Delete Failed');\n  });\n}\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.NUMBER_ASCENDING(mapper);\n\n  if (data.field === \"assets_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  } else if (data.field === \"assets_count\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  } else if (data.field === \"assets_cost\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  } else if (data.field === \"assets_purchased_date\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  } else if (data.field === \"gst\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\nlet count = tasks.length; // console.log(count);\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    Postassets(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.assets_id === data.assets_id);\n    task.admin_id = sessiondetails.user;\n    task.assets_cost = data.assets_cost;\n    task.assets_name = data.assets_name;\n    task.assets_purchased_date = data.assets_purchased_date;\n    task.assets_count = data.assets_count;\n    task.gst = data.gst;\n    Postassets(task);\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.assets_id === data.assets_id);\n    deleteassets(task);\n    tasks = tasks.filter(t => t.assets_id !== task.assets_id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Assettest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: [/*#__PURE__*/_jsxDEV(Link, {\n    to: \"/createassets\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add assets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"ASSETS\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"assets_id\",\n        label: \"Assets ID\",\n        placeholder: \"Assets ID\",\n        hideInCreateForm: true,\n        hideInUpdateForm: true,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"admin_id\",\n        label: \"Admin ID\",\n        placeholder: \"Admin ID\",\n        readOnly: true,\n        hideInCreateForm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"assets_cost\",\n        label: \"Assets Cost\",\n        placeholder: \"Assets Cost\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"assets_name\",\n        label: \"Assets Name\",\n        placeholder: \"Assets Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"assets_purchased_date\",\n        label: \"Assets Purchased Date\",\n        placeholder: \"Assets Purchased Date\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"assets_count\",\n        label: \"Assets Count\",\n        placeholder: \"Assets Count\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"gst\",\n        label: \"GST\",\n        placeholder: \"GST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n      title: \"Time Table Creation\",\n      message: \"Create a new Time Table!\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlinePlusCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 18\n      }, this),\n      onSubmit: task => service.create(task),\n      submitText: \"Create\",\n      validate: values => {\n        const errors = {}; //     if (!values.id) {\n        //   errors.id = \"Please, provide Time Table ID\";\n        // }\n\n        if (!values.admin_id) {\n          errors.admin_id = \"Please, provide Admin ID\";\n        }\n\n        if (!values.assets_cost) {\n          errors.assets_cost = \"Please, provide Asset's Cost\";\n        }\n\n        if (!values.assets_name) {\n          errors.assets_name = \"Please, provide Asset's Name\";\n        }\n\n        if (!values.assets_purchased_date) {\n          errors.assets_purchased_date = \"Please, provide Asset's Purchased date\";\n        }\n\n        if (!values.assets_count) {\n          errors.assets_count = \"Please, provide Asset's Count\";\n        }\n\n        if (!values.gst) {\n          errors.gst = \"Please, provide Admin ID\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Asset Update Process\",\n      message: \"Update Asset\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiFillEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }, this),\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.assets_id) {\n          errors.assets_id = \"Please, provide Asset ID\";\n        }\n\n        if (!values.admin_id) {\n          errors.admin_id = \"Please, provide Admin ID\";\n        }\n\n        if (!values.assets_cost) {\n          errors.assets_cost = \"Please, provide Asset's Cost\";\n        }\n\n        if (!values.assets_name) {\n          errors.assets_name = \"Please, provide Asset's Name\";\n        }\n\n        if (!values.assets_purchased_date) {\n          errors.assets_purchased_date = \"Please, provide Asset's Purchased date\";\n        }\n\n        if (!values.assets_count) {\n          errors.assets_count = \"Please, provide Asset's Count\";\n        } //   if (!values.gst) {\n        //     errors.gst = \"Please, provide Admin ID\";\n        //   }\n\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n      title: \"Asset Delete Process\",\n      message: \"Are you sure you want to delete the Asset?\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiFillDelete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 18\n      }, this),\n      onSubmit: task => service.delete(task),\n      submitText: \"Delete\",\n      validate: values => {\n        const errors = {};\n\n        if (values.assets_id === null) {\n          errors.assets_id = \"Please, provide Asset ID\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 174,\n  columnNumber: 3\n}, this);\n\n_c3 = Assettest;\n\nclass AdminAssetsData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Assettest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminAssetsData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"Postassets\");\n$RefreshReg$(_c3, \"Assettest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/AdminAssetsData.js"],"names":["React","axios","Component","toast","AiIcons","IoIcons","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","Pagination","Link","configure","sessiondetails","JSON","parse","localStorage","getItem","DescriptionRenderer","field","console","log","tasks","getTask","testTask","Postassets","AdminAssetsRow","senddata","assets_id","admin_id","user","assets_cost","assets_name","assets_purchased_date","assets_count","grade","gst","post","then","response","data","status","window","location","reload","catch","error","deleteassets","url","delete","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","count","length","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","create","task","push","update","find","t","filter","styles","container","margin","width","Assettest","values","errors","AdminAssetsData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../CRUDTable.css\";\r\nimport { Component } from \"react\";\r\nimport { toast } from 'react-toastify';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  DeleteForm,\r\n  Pagination\r\n} from \"react-crud-table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntoast.configure()\r\nconst sessiondetails=JSON.parse(localStorage.getItem(\"sessiondetails\"));\r\n// Component's Base CSS\r\n//import \"./index.css\";\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\nconsole.log();\r\nlet tasks = [];\r\n\r\nfunction  getTask(testTask){\r\n  tasks = testTask;\r\n  // console.log(tasks);\r\n}\r\n\r\nfunction Postassets(AdminAssetsRow){\r\n  var senddata={\r\n    assets_id : AdminAssetsRow.assets_id,\r\n    admin_id:sessiondetails.user,\r\n    assets_cost : AdminAssetsRow.assets_cost,\r\n    assets_name : AdminAssetsRow.assets_name,\r\n    assets_purchased_date : AdminAssetsRow.assets_purchased_date,\r\n    assets_count : AdminAssetsRow.assets_count,\r\n    grade : AdminAssetsRow.grade,\r\n    gst : AdminAssetsRow.gst\r\n  }\r\n\r\naxios\r\n      .post('http://103.142.165.146:8080//smarter-learnings/assets/', senddata )\r\n      .then(response => {\r\n        if(response.data.status ==\"Success\"){\r\n          window.location.reload(\"/\");\r\n        }\r\n        else{\r\n          toast('Update Failed')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        toast('Update Failed')\r\n      })\r\n}\r\n\r\nfunction deleteassets(AdminAssetsRow){\r\n  console.log(AdminAssetsRow.assets_id);\r\n  const url = 'http://103.142.165.146:8080//smarter-learnings/assets/' + AdminAssetsRow.assets_id;\r\n  axios\r\n        .delete(url)\r\n        .then(response => {\r\n          if(response.status==200){\r\n            window.location.reload(\"/\");\r\n           }\r\n           else{\r\n             toast('Delete Failed')\r\n           }\r\n        })\r\n        .catch(error => {\r\n          toast('Delete Failed')\r\n        })\r\n  }\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.NUMBER_ASCENDING(mapper);\r\n\r\n  if (data.field === \"assets_id\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  } \r\n  else if (data.field === \"assets_count\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"assets_cost\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"assets_purchased_date\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"gst\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n\r\n  else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\nlet count = tasks.length;\r\n// console.log(count);\r\nconst service = {\r\n  fetchItems: payload => {\r\n    const { activePage, itemsPerPage } = payload.pagination;\r\n    const start = (activePage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result.slice(start, end));\r\n  },\r\n  fetchTotal: payload => {\r\n    return Promise.resolve(tasks.length);\r\n  },\r\n  create: task => {\r\n    tasks.push({\r\n     });\r\n     Postassets(task);\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.assets_id === data.assets_id);\r\n    task.admin_id = sessiondetails.user;\r\n    task.assets_cost = data.assets_cost;\r\n    task.assets_name = data.assets_name;\r\n    task.assets_purchased_date = data.assets_purchased_date;\r\n    task.assets_count = data.assets_count;\r\n    task.gst = data.gst;\r\n    Postassets(task);\r\n    return Promise.resolve(task);\r\n  },\r\n   delete: data => {\r\n     const task = tasks.find(t => t.assets_id === data.assets_id);\r\n     deleteassets(task);\r\n     tasks = tasks.filter(t => t.assets_id !== task.assets_id);\r\n     return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst Assettest = () => (\r\n  \r\n  \r\n  <div style={styles.container}>\r\n    <Link to=\"/createassets\"><div>Add assets</div></Link>\r\n    <CRUDTable\r\n      caption=\"ASSETS\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"assets_id\" label=\"Assets ID\" placeholder=\"Assets ID\" hideInCreateForm hideInUpdateForm type=\"number\"/>\r\n        <Field name=\"admin_id\" label=\"Admin ID\" placeholder=\"Admin ID\" readOnly hideInCreateForm />\r\n        <Field name=\"assets_cost\" label=\"Assets Cost\" placeholder=\"Assets Cost\" type=\"number\" />\r\n        <Field name=\"assets_name\" label=\"Assets Name\" placeholder=\"Assets Name\" />\r\n        <Field name=\"assets_purchased_date\" label=\"Assets Purchased Date\" placeholder=\"Assets Purchased Date\" type=\"date\" />\r\n        <Field name=\"assets_count\" label=\"Assets Count\" placeholder=\"Assets Count\" type=\"number\" />\r\n        <Field name=\"gst\" label=\"GST\" placeholder=\"GST\"  />\r\n      </Fields>\r\n      <CreateForm\r\n        title=\"Time Table Creation\"\r\n        message=\"Create a new Time Table!\"\r\n        trigger={<AiIcons.AiOutlinePlusCircle/>}\r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n          //     if (!values.id) {\r\n          //   errors.id = \"Please, provide Time Table ID\";\r\n          // }\r\n\r\n          if (!values.admin_id) {\r\n            errors.admin_id = \"Please, provide Admin ID\";\r\n          }\r\n\r\n          if (!values.assets_cost) {\r\n            errors.assets_cost = \"Please, provide Asset's Cost\";\r\n          }\r\n\r\n          if (!values.assets_name) {\r\n            errors.assets_name = \"Please, provide Asset's Name\";\r\n          }\r\n          if (!values.assets_purchased_date) {\r\n            errors.assets_purchased_date = \"Please, provide Asset's Purchased date\";\r\n          }\r\n          if (!values.assets_count) {\r\n            errors.assets_count = \"Please, provide Asset's Count\";\r\n          }\r\n           if (!values.gst) {\r\n             errors.gst = \"Please, provide Admin ID\";\r\n           }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n\r\n      <UpdateForm\r\n        title=\"Asset Update Process\"\r\n        message=\"Update Asset\"\r\n        trigger= {<AiIcons.AiFillEdit />}\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.assets_id) {\r\n            errors.assets_id = \"Please, provide Asset ID\";\r\n          }\r\n\r\n          if (!values.admin_id) {\r\n            errors.admin_id = \"Please, provide Admin ID\";\r\n          }\r\n\r\n          if (!values.assets_cost) {\r\n            errors.assets_cost = \"Please, provide Asset's Cost\";\r\n          }\r\n\r\n          if (!values.assets_name) {\r\n            errors.assets_name = \"Please, provide Asset's Name\";\r\n          }\r\n          if (!values.assets_purchased_date) {\r\n            errors.assets_purchased_date = \"Please, provide Asset's Purchased date\";\r\n          }\r\n          if (!values.assets_count) {\r\n            errors.assets_count = \"Please, provide Asset's Count\";\r\n          }\r\n        //   if (!values.gst) {\r\n        //     errors.gst = \"Please, provide Admin ID\";\r\n        //   }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <DeleteForm\r\n        title=\"Asset Delete Process\"\r\n        message=\"Are you sure you want to delete the Asset?\"\r\n        trigger={<AiIcons.AiFillDelete />}\r\n        onSubmit={task => service.delete(task)}\r\n        submitText=\"Delete\"\r\n        validate={values => {\r\n          const errors = {};\r\n              if (values.assets_id===null) {\r\n            errors.assets_id = \"Please, provide Asset ID\";\r\n          }\r\n          return errors;\r\n        }}\r\n      />\r\n      <Pagination\r\n        itemsPerPage={10}\r\n        activePage = {1}\r\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nclass AdminAssetsData extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        getTask(this.props.data);\r\n        }\r\n    render() { \r\n      return ( <div>\r\n      <Assettest/> \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default AdminAssetsData;"]},"metadata":{},"sourceType":"module"}