{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\CoursesEnrolledData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask; // console.log(tasks);\n} // function Postcourse(AdminCoursesRow){\n// axios\n//       .post('http://103.142.165.146:8080/smarter-learnings/courses-enrolled', AdminCoursesRow )\n//       .then(response => {\n//         if(response.data.status ==\"Success\"){\n//           window.location.reload(\"/\");\n//         }\n//         else{\n//           toast('Update Failed')\n//         }\n//       })\n//       .catch(error => {\n//         toast('Update Failed')\n//       })\n// }\n// function deletecourse(AdminCoursesRow){\n//   console.log(AdminCoursesRow.course_id);\n//   const url = 'http://103.142.165.146:8080/smarter-learnings/courses-enrolled' + AdminCoursesRow.course_id;\n//   axios\n//         .delete(url)\n//         .then(response => {\n//           if(response.status==200){\n//             window.location.reload(\"/\");\n//            }\n//            else{\n//              toast('Delete Failed')\n//            }\n//         })\n//         .catch(error => {\n//           toast('Delete Failed')\n//         })\n//   }\n\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"course_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"student_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({}); //Postcourse(task);\n\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.course_id === data.course_id && t.student_id === data.student_id);\n    task.course_id = data.course_id;\n    task.student_id = data.student_id; //Postcourse(task);\n\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.course_id === data.course_id && t.student_id === data.student_id); //deletecourse(task);\n\n    tasks = tasks.filter(t => t.course_id !== task.course_id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Enrolled = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"COURSES\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"id\",\n        label: \"ID\",\n        placeholder: \"ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_id\",\n        label: \"Course ID\",\n        placeholder: \"Course ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"student_id\",\n        label: \"student ID \",\n        placeholder: \"student ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"View Student Course\",\n      message: \"Details\",\n      trigger: \"View\",\n      onSubmit: task => service.update(task),\n      submitText: \"Cancel\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.course_id) {\n          errors.course_id = \"Please, provide Course ID\";\n        }\n\n        if (!values.student_id) {\n          errors.student_id = \"Please, provide Course Description\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 7,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 3\n}, this);\n\n_c2 = Enrolled;\n\nclass CourseEnrolledData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Enrolled, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default CourseEnrolledData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"Enrolled\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/CoursesEnrolledData.js"],"names":["React","axios","Component","toast","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","Pagination","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","data","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","course_id","student_id","delete","filter","styles","container","margin","width","Enrolled","values","errors","CourseEnrolledData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, {\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n  Pagination\n} from \"react-crud-table\";\n\ntoast.configure()\n\n// Component's Base CSS\n//import \"./index.css\";\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\nconsole.log();\nlet tasks = [];\n\nfunction  getTask(testTask){\n  tasks = testTask;\n  // console.log(tasks);\n}\n\n// function Postcourse(AdminCoursesRow){\n// axios\n//       .post('http://103.142.165.146:8080/smarter-learnings/courses-enrolled', AdminCoursesRow )\n//       .then(response => {\n//         if(response.data.status ==\"Success\"){\n//           window.location.reload(\"/\");\n//         }\n//         else{\n//           toast('Update Failed')\n//         }\n//       })\n//       .catch(error => {\n//         toast('Update Failed')\n//       })\n// }\n\n// function deletecourse(AdminCoursesRow){\n//   console.log(AdminCoursesRow.course_id);\n//   const url = 'http://103.142.165.146:8080/smarter-learnings/courses-enrolled' + AdminCoursesRow.course_id;\n//   axios\n//         .delete(url)\n//         .then(response => {\n//           if(response.status==200){\n//             window.location.reload(\"/\");\n//            }\n//            else{\n//              toast('Delete Failed')\n//            }\n//         })\n//         .catch(error => {\n//           toast('Delete Failed')\n//         })\n//   }\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"course_id\") {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  } \n  else if (data.field === \"student_id\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.NUMBER_ASCENDING(mapper)\n        : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\n// let count = tasks.length;\n// console.log(count);\nconst service = {\n  fetchItems: payload => {\n    const { activePage, itemsPerPage } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({\n     });\n     //Postcourse(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => (t.course_id === data.course_id && t.student_id === data.student_id) );\n    task.course_id = data.course_id;\n    task.student_id = data.student_id;\n    //Postcourse(task);\n    return Promise.resolve(task);\n  },\n   delete: data => {\n     const task = tasks.find(t => (t.course_id === data.course_id && t.student_id === data.student_id));\n     //deletecourse(task);\n     tasks = tasks.filter(t => t.course_id !== task.course_id);\n     return Promise.resolve(task);\n  }\n};\n\nconst styles = {\n  container: { margin: \"auto\", width: \"fit-content\" }\n};\n\nconst Enrolled = () => (\n  \n  \n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"COURSES\"\n      fetchItems={payload => service.fetchItems(payload)}\n    >\n      <Fields>\n      <Field name=\"id\" label=\"ID\" placeholder=\"ID\" readOnly />\n        <Field name=\"course_id\" label=\"Course ID\" placeholder=\"Course ID\" readOnly />\n        <Field name=\"student_id\" label=\"student ID \" placeholder=\"student ID\"  readOnly />\n      </Fields>\n      {/* <CreateForm\n        title=\"Course Creation\"\n        message=\"Create a new Course!\"\n        trigger={<AiIcons.AiOutlinePlusCircle/>}\n        onSubmit={task => service.create(task)}\n        submitText=\"Create\"\n        validate={values => {\n          const errors = {};\n              if (!values.course_id) {\n            errors.course_id = \"Please, provide Course ID\";\n          }\n\n          if (!values.student_id) {\n            errors.student_id = \"Please, provide Course Description\";\n          }\n\n\n          return errors;\n        }}\n      /> */}\n\n      <UpdateForm\n        title=\"View Student Course\"\n        message=\"Details\"\n        trigger= \"View\"\n        onSubmit={task => service.update(task)}\n        submitText=\"Cancel\"\n        validate={values => {\n          const errors = {};\n\n          if (!values.course_id) {\n            errors.course_id = \"Please, provide Course ID\";\n          }\n\n          if (!values.student_id) {\n            errors.student_id = \"Please, provide Course Description\";\n          }\n\n\n          return errors;\n        }}\n      />\n      {/* <DeleteForm\n        title=\"Course Delete Process\"\n        message=\"Are you sure you want to delete the Course?\"\n        trigger={<AiIcons.AiFillDelete />}\n        onSubmit={task => service.delete(task)}\n        submitText=\"Delete\"\n        validate={values => {\n          const errors = {};\n              if (!values.course_id) {\n            errors.course_id = \"Please, provide Course ID\";\n          }\n\n          if (!values.student_id) {\n            errors.student_id = \"Please, provide Course Description\";\n          }\n          return errors;\n        }}\n      /> */}\n      <Pagination\n        itemsPerPage={7}\n        activePage = {1}\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\n      />\n    </CRUDTable>\n  </div>\n\n)\n\n\nclass CourseEnrolledData extends Component {\n    constructor(props) {\n        super(props); \n        getTask(this.props.data);\n        }\n    render() { \n      return ( <div>\n      <Enrolled/> \n      </div>\n      );\n    }\n  }\n   \n  export default CourseEnrolledData;\n"]},"metadata":{},"sourceType":"module"}