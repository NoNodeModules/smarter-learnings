{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\StudentTimeTableData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask;\n  console.log(tasks);\n}\n\nfunction PostTimeTable(StudentTimeTable) {\n  axios.post('http://103.142.165.146:8080//smarter-learnings/timetable/', StudentTimeTable).then(response => {\n    if (response.data.status == \"Success\") {\n      window.location.reload(\"/\");\n    } else {\n      toast('Update Failed');\n    }\n  }).catch(error => {\n    toast('Update Failed');\n  });\n}\n\n_c2 = PostTimeTable;\n\nfunction deleteTimeTable(StudentTimeTable) {\n  console.log(StudentTimeTable.id);\n  const url = 'http://103.142.165.146:8080//smarter-learnings/timetable/' + StudentTimeTable.id;\n  axios.delete(url).then(response => {\n    if (response.status == 200) {\n      window.location.reload(\"/\");\n    } else {\n      toast('Delete Failed');\n    }\n  }).catch(error => {\n    toast('Delete Failed');\n  });\n}\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"time\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"day\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"subject\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"facultyname\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"grade\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"createdDate\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    PostTimeTable(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    task.id = data.id;\n    task.day = data.day;\n    task.subject = data.subject;\n    task.facultyname = data.facultyname;\n    task.time = data.time;\n    task.grade = data.grade;\n    task.createdDate = data.createdDate;\n    PostTimeTable(task);\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.id === data.id);\n    deleteTimeTable(task);\n    tasks = tasks.filter(t => t.id !== task.id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst TimeTabletest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"TIME TABLE\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"id\",\n        label: \"ID\",\n        placeholder: \"ID\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"day\",\n        label: \"Day\",\n        placeholder: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"subject\",\n        label: \"Subject\",\n        placeholder: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"facultyname\",\n        label: \"Faculty Name\",\n        placeholder: \"Faculty Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"time\",\n        label: \"Time\",\n        placeholder: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"grade\",\n        label: \"Grade\",\n        placeholder: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"createdDate\",\n        label: \"Created Date\",\n        placeholder: \"Created Date\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 167,\n  columnNumber: 3\n}, this);\n\n_c3 = TimeTabletest;\n\nclass StudentTimeTableData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TimeTabletest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default StudentTimeTableData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"PostTimeTable\");\n$RefreshReg$(_c3, \"TimeTabletest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/StudentTimeTableData.js"],"names":["React","axios","Component","toast","AiIcons","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","Pagination","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","PostTimeTable","StudentTimeTable","post","then","response","data","status","window","location","reload","catch","error","deleteTimeTable","id","url","delete","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","day","subject","facultyname","time","grade","createdDate","filter","styles","container","margin","width","TimeTabletest","StudentTimeTableData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, {\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n  Pagination\n} from \"react-crud-table\";\n\ntoast.configure()\n\n// Component's Base CSS\n//import \"./index.css\";\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\nconsole.log();\nlet tasks = [];\n\nfunction  getTask(testTask){\n  tasks = testTask;\n  console.log(tasks);\n}\n\nfunction PostTimeTable(StudentTimeTable){\naxios\n      .post('http://103.142.165.146:8080//smarter-learnings/timetable/', StudentTimeTable )\n      .then(response => {\n        if(response.data.status ==\"Success\"){\n          window.location.reload(\"/\");\n        }\n        else{\n          toast('Update Failed')\n        }\n      })\n      .catch(error => {\n        toast('Update Failed')\n      })\n}\n\nfunction deleteTimeTable(StudentTimeTable){\n  console.log(StudentTimeTable.id);\n  const url = 'http://103.142.165.146:8080//smarter-learnings/timetable/' + StudentTimeTable.id;\n  axios\n        .delete(url)\n        .then(response => {\n          if(response.status==200){\n            window.location.reload(\"/\");\n           }\n           else{\n             toast('Delete Failed')\n           }\n        })\n        .catch(error => {\n          toast('Delete Failed')\n        })\n  }\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"time\") {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  } \n  else if (data.field === \"day\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"subject\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"facultyname\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"grade\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"createdDate\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.NUMBER_ASCENDING(mapper)\n        : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\n// let count = tasks.length;\n// console.log(count);\nconst service = {\n  fetchItems: payload => {\n    const { activePage, itemsPerPage } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({\n     });\n     PostTimeTable(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    task.id = data.id;\n    task.day = data.day;\n    task.subject = data.subject;\n    task.facultyname = data.facultyname;\n    task.time = data.time;\n    task.grade = data.grade;\n    task.createdDate = data.createdDate;\n    PostTimeTable(task);\n    return Promise.resolve(task);\n  },\n   delete: data => {\n     const task = tasks.find(t => t.id === data.id);\n     deleteTimeTable(task);\n     tasks = tasks.filter(t => t.id !== task.id);\n     return Promise.resolve(task);\n  }\n};\n\nconst styles = {\n  container: { margin: \"auto\", width: \"fit-content\" }\n};\n\nconst TimeTabletest = () => (\n  \n  \n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"TIME TABLE\"\n      fetchItems={payload => service.fetchItems(payload)}\n    >\n      <Fields>\n        <Field name=\"id\" label=\"ID\" placeholder=\"ID\" type=\"number\"/>\n        <Field name=\"day\" label=\"Day\" placeholder=\"Day\"  />\n        <Field name=\"subject\" label=\"Subject\" placeholder=\"Subject\" />\n        <Field name=\"facultyname\" label=\"Faculty Name\" placeholder=\"Faculty Name\" />\n        <Field name=\"time\" label=\"Time\" placeholder=\"Time\" />\n        <Field name=\"grade\" label=\"Grade\" placeholder=\"Grade\" />\n        <Field name=\"createdDate\" label=\"Created Date\" placeholder=\"Created Date\" type=\"date\"/>\n      </Fields>  \n      <Pagination\n        itemsPerPage={10}\n        activePage = {1}\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\n      />\n    </CRUDTable>\n  </div>\n\n)\n\n\nclass StudentTimeTableData extends Component {\n    constructor(props) {\n        super(props); \n        getTask(this.props.data);\n        }\n    render() { \n      return ( <div>\n      <TimeTabletest/> \n      </div>\n      );\n    }\n  }\n   \n  export default StudentTimeTableData;"]},"metadata":{},"sourceType":"module"}