{"ast":null,"code":"// JSON Konstruktor für die Überprüfung ob ein Objekt JSON ist\nvar jsonC = {}.constructor;\n\nvar isJSON = function (json) {\n  if (json && json.constructor === jsonC) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexports.isJSON = isJSON;\n\nvar mergeJSON = function (json1, json2) {\n  var result = null;\n\n  if (isJSON(json2)) {\n    result = {};\n\n    if (isJSON(json1)) {\n      for (var key in json1) {\n        result[key] = json1[key];\n      }\n    }\n\n    for (var key in json2) {\n      if (typeof result[key] === \"object\" && typeof json2 === \"object\") {\n        result[key] = mergeJSON(result[key], json2[key]);\n      } else {\n        result[key] = json2[key];\n      }\n    }\n  } else if (Array.isArray(json1) && Array.isArray(json2)) {\n    result = json1;\n\n    for (var i = 0; i < json2.length; i++) {\n      if (result.indexOf(json2[i]) === -1) {\n        result[result.length] = json2[i];\n      }\n    }\n  } else {\n    result = json2;\n  }\n\n  return result;\n};\n\nexports.merge = mergeJSON;","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/node_modules/merge-json/index.js"],"names":["jsonC","constructor","isJSON","json","exports","mergeJSON","json1","json2","result","key","Array","isArray","i","length","indexOf","merge"],"mappings":"AAAA;AACA,IAAIA,KAAK,GAAG,GAAGC,WAAf;;AAEA,IAAIC,MAAM,GAAG,UAASC,IAAT,EAAc;AAC1B,MAAGA,IAAI,IAAIA,IAAI,CAACF,WAAL,KAAqBD,KAAhC,EAAsC;AACrC,WAAO,IAAP;AACA,GAFD,MAEK;AACJ,WAAO,KAAP;AACA;AACD,CAND;;AAQAI,OAAO,CAACF,MAAR,GAAiBA,MAAjB;;AAGA,IAAIG,SAAS,GAAG,UAASC,KAAT,EAAgBC,KAAhB,EAAsB;AACrC,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAGN,MAAM,CAACK,KAAD,CAAT,EAAiB;AAChBC,IAAAA,MAAM,GAAG,EAAT;;AACA,QAAGN,MAAM,CAACI,KAAD,CAAT,EAAiB;AAChB,WAAI,IAAIG,GAAR,IAAeH,KAAf,EAAqB;AACpBE,QAAAA,MAAM,CAACC,GAAD,CAAN,GAAcH,KAAK,CAACG,GAAD,CAAnB;AACA;AACD;;AAED,SAAI,IAAIA,GAAR,IAAeF,KAAf,EAAqB;AACpB,UAAG,OAAOC,MAAM,CAACC,GAAD,CAAb,KAAuB,QAAvB,IAAmC,OAAOF,KAAP,KAAiB,QAAvD,EAAgE;AAC/DC,QAAAA,MAAM,CAACC,GAAD,CAAN,GAAcJ,SAAS,CAACG,MAAM,CAACC,GAAD,CAAP,EAAcF,KAAK,CAACE,GAAD,CAAnB,CAAvB;AACA,OAFD,MAEK;AACJD,QAAAA,MAAM,CAACC,GAAD,CAAN,GAAcF,KAAK,CAACE,GAAD,CAAnB;AACA;AACD;AACD,GAfD,MAeM,IAAGC,KAAK,CAACC,OAAN,CAAcL,KAAd,KAAwBI,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAA3B,EAAgD;AACrDC,IAAAA,MAAM,GAAGF,KAAT;;AAEA,SAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,KAAK,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACpC,UAAGJ,MAAM,CAACM,OAAP,CAAeP,KAAK,CAACK,CAAD,CAApB,MAA6B,CAAC,CAAjC,EAAmC;AAClCJ,QAAAA,MAAM,CAACA,MAAM,CAACK,MAAR,CAAN,GAAwBN,KAAK,CAACK,CAAD,CAA7B;AACA;AACD;AACD,GARK,MAQD;AACJJ,IAAAA,MAAM,GAAGD,KAAT;AACA;;AAED,SAAOC,MAAP;AACA,CA9BD;;AAgCAJ,OAAO,CAACW,KAAR,GAAgBV,SAAhB","sourcesContent":["// JSON Konstruktor für die Überprüfung ob ein Objekt JSON ist\r\nvar jsonC = {}.constructor ;\r\n\r\nvar isJSON = function(json){\r\n\tif(json && json.constructor === jsonC){\r\n\t\treturn true ;\r\n\t}else{\r\n\t\treturn false ;\r\n\t}\r\n}\r\n\r\nexports.isJSON = isJSON ;\r\n\r\n\r\nvar mergeJSON = function(json1, json2){\r\n\tvar result = null ;\r\n\tif(isJSON(json2)){\r\n\t\tresult = {} ;\r\n\t\tif(isJSON(json1)){\r\n\t\t\tfor(var key in json1){\r\n\t\t\t\tresult[key] = json1[key] ;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(var key in json2){\r\n\t\t\tif(typeof result[key] === \"object\" && typeof json2 === \"object\"){\r\n\t\t\t\tresult[key] = mergeJSON(result[key], json2[key]) ;\r\n\t\t\t}else{\r\n\t\t\t\tresult[key] = json2[key] ;\r\n\t\t\t}\r\n\t\t}\r\n\t}else if(Array.isArray(json1) && Array.isArray(json2)){\r\n\t\tresult = json1 ;\r\n\r\n\t\tfor(var i = 0; i < json2.length; i++){\r\n\t\t\tif(result.indexOf(json2[i]) === -1){\r\n\t\t\t\tresult[result.length] = json2[i] ;\r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tresult = json2 ;\r\n\t}\r\n\r\n\treturn result ;\r\n}\r\n\r\nexports.merge = mergeJSON ;\r\n"]},"metadata":{},"sourceType":"script"}