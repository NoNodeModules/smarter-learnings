{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\AdminCourseData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm, Pagination } from \"react-crud-table\";\nimport { Link } from \"react-router-dom\";\nimport { APIData } from \"../Authentication/APIData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask;\n  console.log(tasks);\n}\n\nfunction Postcourse(AdminCoursesRow) {\n  axios.post(APIData.api + 'courses/', AdminCoursesRow, {\n    headers: APIData.headers\n  }).then(response => {\n    if (response.data.status == \"Success\") {\n      window.location.reload(\"/\");\n    } else {\n      toast('Update Failed');\n    }\n  }).catch(error => {\n    toast('Update Failed');\n  });\n}\n\n_c2 = Postcourse;\n\nfunction deletecourse(AdminCoursesRow) {\n  console.log(AdminCoursesRow.course_id);\n  const url = 'http://103.142.165.146:8080/smarter-learnings/courses/' + AdminCoursesRow.course_id;\n  axios.delete(url).then(response => {\n    if (response.status == 200) {\n      window.location.reload(\"/\");\n    } else {\n      toast('Delete Failed');\n    }\n  }).catch(error => {\n    toast('Delete Failed');\n  });\n}\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"course_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_description\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_type\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_sub_type\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_duration\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"admin_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    Postcourse(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.course_id === data.course_id);\n    task.course_description = data.course_description;\n    task.course_type = data.course_type;\n    task.course_sub_type = data.course_sub_type;\n    task.course_fees = data.course_fees;\n    task.course_duration = data.course_duration;\n    task.admin_id = data.admin_id;\n    Postcourse(task);\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.course_id === data.course_id);\n    deletecourse(task);\n    tasks = tasks.filter(t => t.course_id !== task.course_id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Coursetest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: [/*#__PURE__*/_jsxDEV(Link, {\n    to: \"/addcourses\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Upload\",\n      children: \"ADD COURSE | JOBS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 6\n  }, this), /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"COURSES\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_id\",\n        label: \"Course ID\",\n        placeholder: \"Course ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_description\",\n        label: \"Course Description\",\n        placeholder: \"Course Description\",\n        render: DescriptionRenderer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_type\",\n        label: \"Course Type\",\n        placeholder: \"Course Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_sub_type\",\n        label: \"Course Sub Type\",\n        placeholder: \"Course Sub Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_fees\",\n        label: \"Course Fees\",\n        placeholder: \"Course Fees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_duration\",\n        label: \"Course Duration\",\n        placeholder: \"Course Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"admin_id\",\n        label: \"Admin ID\",\n        placeholder: \"Admin ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Course Update Process\",\n      message: \"Update Course\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiFillEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }, this),\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.course_id) {\n          errors.course_id = \"Please, provide Course ID\";\n        }\n\n        if (!values.course_description) {\n          errors.course_description = \"Please, provide Course Description\";\n        }\n\n        if (!values.course_type) {\n          errors.course_type = \"Please, provide Course Type\";\n        }\n\n        if (!values.course_sub_type) {\n          errors.course_sub_type = \"Please, provide Course SubType\";\n        }\n\n        if (!values.course_fees) {\n          errors.course_fees = \"Please, provide Course Fees\";\n        }\n\n        if (!values.course_duration) {\n          errors.course_duration = \"Please, provide Course Duration\";\n        }\n\n        if (!values.admin_id) {\n          errors.admin_id = \"Please, provide Admin ID\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n      title: \"Course Delete Process\",\n      message: \"Are you sure you want to delete the Course?\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiFillDelete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 18\n      }, this),\n      onSubmit: task => service.delete(task),\n      submitText: \"Delete\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.course_id) {\n          errors.course_id = \"Please, provide Course ID\";\n        }\n\n        if (!values.course_description) {\n          errors.course_id = \"Please, provide Course Description\";\n        }\n\n        if (!values.course_type) {\n          errors.course_type = \"Please, provide Course Type\";\n        }\n\n        if (!values.course_sub_type) {\n          errors.course_sub_type = \"Please, provide Course SubType\";\n        }\n\n        if (!values.course_fees) {\n          errors.course_fees = \"Please, provide Course Fees\";\n        }\n\n        if (!values.course_duration) {\n          errors.course_duration = \"Please, provide Course Duration\";\n        }\n\n        if (!values.admin_id) {\n          errors.admin_id = \"Please, provide Admin ID\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 167,\n  columnNumber: 3\n}, this);\n\n_c3 = Coursetest;\n\nclass AdminCourseData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Coursetest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminCourseData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"Postcourse\");\n$RefreshReg$(_c3, \"Coursetest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/AdminCourseData.js"],"names":["React","axios","Component","toast","AiIcons","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","Pagination","Link","APIData","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","Postcourse","AdminCoursesRow","post","api","headers","then","response","data","status","window","location","reload","catch","error","deletecourse","course_id","url","delete","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","course_description","course_type","course_sub_type","course_fees","course_duration","admin_id","filter","styles","container","margin","width","Coursetest","values","errors","AdminCourseData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../CRUDTable.css\";\r\nimport { Component } from \"react\";\r\nimport { toast } from 'react-toastify';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  DeleteForm,\r\n  Pagination\r\n} from \"react-crud-table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { APIData } from \"../Authentication/APIData\";\r\n\r\ntoast.configure()\r\n\r\n// Component's Base CSS\r\n//import \"./index.css\";\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\nconsole.log();\r\nlet tasks = [];\r\n\r\nfunction  getTask(testTask){\r\n  tasks = testTask;\r\n  console.log(tasks);\r\n}\r\nfunction Postcourse(AdminCoursesRow){\r\naxios\r\n      .post(APIData.api+'courses/', AdminCoursesRow ,{headers:APIData.headers})\r\n      .then(response => {\r\n        if(response.data.status ==\"Success\"){\r\n          window.location.reload(\"/\");\r\n        }\r\n        else{\r\n          toast('Update Failed')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        toast('Update Failed')\r\n      })\r\n}\r\n\r\nfunction deletecourse(AdminCoursesRow){\r\n  console.log(AdminCoursesRow.course_id);\r\n  const url = 'http://103.142.165.146:8080/smarter-learnings/courses/' + AdminCoursesRow.course_id;\r\n  axios\r\n        .delete(url)\r\n        .then(response => {\r\n          if(response.status==200){\r\n            window.location.reload(\"/\");\r\n           }\r\n           else{\r\n             toast('Delete Failed')\r\n           }\r\n        })\r\n        .catch(error => {\r\n          toast('Delete Failed')\r\n        })\r\n  }\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"course_id\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  } \r\n  else if (data.field === \"course_description\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"course_type\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"course_sub_type\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"course_duration\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"admin_id\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\n// let count = tasks.length;\r\n// console.log(count);\r\nconst service = {\r\n  fetchItems: payload => {\r\n    const { activePage, itemsPerPage } = payload.pagination;\r\n    const start = (activePage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result.slice(start, end));\r\n  },\r\n  fetchTotal: payload => {\r\n    return Promise.resolve(tasks.length);\r\n  },\r\n  create: task => {\r\n    tasks.push({\r\n     });\r\n     Postcourse(task);\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.course_id === data.course_id);\r\n    task.course_description = data.course_description;\r\n    task.course_type = data.course_type;\r\n    task.course_sub_type = data.course_sub_type;\r\n    task.course_fees = data.course_fees;\r\n    task.course_duration = data.course_duration;\r\n    task.admin_id = data.admin_id;\r\n    Postcourse(task);\r\n    return Promise.resolve(task);\r\n  },\r\n   delete: data => {\r\n     const task = tasks.find(t => t.course_id === data.course_id);\r\n     deletecourse(task);\r\n     tasks = tasks.filter(t => t.course_id !== task.course_id);\r\n     return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst Coursetest = () => (\r\n  \r\n  \r\n  <div style={styles.container}>\r\n     <Link to=\"/addcourses\"><div className=\"Upload\"> \r\n          ADD COURSE | JOBS \r\n      </div></Link> \r\n    <CRUDTable\r\n      caption=\"COURSES\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"course_id\" label=\"Course ID\" placeholder=\"Course ID\" readOnly />\r\n        <Field name=\"course_description\" label=\"Course Description\" placeholder=\"Course Description\" render={DescriptionRenderer} />\r\n        <Field name=\"course_type\" label=\"Course Type\" placeholder=\"Course Type\" />\r\n        <Field name=\"course_sub_type\" label=\"Course Sub Type\" placeholder=\"Course Sub Type\" />\r\n        <Field name=\"course_fees\" label=\"Course Fees\" placeholder=\"Course Fees\" />\r\n        <Field name=\"course_duration\" label=\"Course Duration\" placeholder=\"Course Duration\" />\r\n        <Field name=\"admin_id\" label=\"Admin ID\" placeholder=\"Admin ID\" />\r\n      </Fields>\r\n     \r\n      {/* <CreateForm\r\n        title=\"Course Creation\"\r\n        message=\"Create a new Course!\"\r\n        trigger={<AiIcons.AiOutlinePlusCircle/>}\r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n              if (!values.course_id) {\r\n            errors.course_id = \"Please, provide Course ID\";\r\n          }\r\n\r\n          if (!values.course_description) {\r\n            errors.course_description = \"Please, provide Course Description\";\r\n          }\r\n\r\n          if (values.course_type !== \"course-academics\" && values.course_type !== \"course-professional\" && values.course_type !== \"job\" && values.course_type !== \"admin\") {\r\n            errors.course_type = \"Please enter course-academics \";\r\n          }\r\n\r\n          if (!values.course_sub_type) {\r\n            errors.course_sub_type = \"Please, provide Course SubType\";\r\n          }\r\n          if (!values.course_fees) {\r\n            errors.course_fees = \"Please, provide Course Fees\";\r\n          }\r\n          if (!values.course_duration) {\r\n            errors.course_duration = \"Please, provide Course Duration\";\r\n          }\r\n          if (!values.admin_id) {\r\n            errors.admin_id = \"Please, provide Admin ID\";\r\n          }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      /> */}\r\n\r\n      <UpdateForm\r\n        title=\"Course Update Process\"\r\n        message=\"Update Course\"\r\n        trigger= {<AiIcons.AiFillEdit />}\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.course_id) {\r\n            errors.course_id = \"Please, provide Course ID\";\r\n          }\r\n\r\n          if (!values.course_description) {\r\n            errors.course_description = \"Please, provide Course Description\";\r\n          }\r\n\r\n          if (!values.course_type) {\r\n            errors.course_type = \"Please, provide Course Type\";\r\n          }\r\n\r\n          if (!values.course_sub_type) {\r\n            errors.course_sub_type = \"Please, provide Course SubType\";\r\n          }\r\n          if (!values.course_fees) {\r\n            errors.course_fees = \"Please, provide Course Fees\";\r\n          }\r\n          if (!values.course_duration) {\r\n            errors.course_duration = \"Please, provide Course Duration\";\r\n          }\r\n          if (!values.admin_id) {\r\n            errors.admin_id = \"Please, provide Admin ID\";\r\n          }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <DeleteForm\r\n        title=\"Course Delete Process\"\r\n        message=\"Are you sure you want to delete the Course?\"\r\n        trigger={<AiIcons.AiFillDelete />}\r\n        onSubmit={task => service.delete(task)}\r\n        submitText=\"Delete\"\r\n        validate={values => {\r\n          const errors = {};\r\n              if (!values.course_id) {\r\n            errors.course_id = \"Please, provide Course ID\";\r\n          }\r\n\r\n          if (!values.course_description) {\r\n            errors.course_id = \"Please, provide Course Description\";\r\n          }\r\n\r\n          if (!values.course_type) {\r\n            errors.course_type = \"Please, provide Course Type\";\r\n          }\r\n\r\n          if (!values.course_sub_type) {\r\n            errors.course_sub_type = \"Please, provide Course SubType\";\r\n          }\r\n          if (!values.course_fees) {\r\n            errors.course_fees = \"Please, provide Course Fees\";\r\n          }\r\n          if (!values.course_duration) {\r\n            errors.course_duration = \"Please, provide Course Duration\";\r\n          }\r\n          if (!values.admin_id) {\r\n            errors.admin_id = \"Please, provide Admin ID\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <Pagination\r\n        itemsPerPage={10}\r\n        activePage = {1}\r\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nclass AdminCourseData extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        getTask(this.props.data);\r\n        }\r\n    render() { \r\n      return ( <div>\r\n      <Coursetest/> \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default AdminCourseData;"]},"metadata":{},"sourceType":"module"}