{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\FacultyAdminJobdata.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, UpdateForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\nconst sessiondetails = JSON.parse(localStorage.getItem(\"sessiondetails\"));\nvar today = new Date(),\n    datetime = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask; // console.log(tasks);\n}\n\nfunction Apply(Usercourserow) {\n  var Applydata = {\n    user_email: sessiondetails.email,\n    user_name: sessiondetails.userName,\n    user_phone_number: sessiondetails.phoneNumber,\n    enrollment_type: \"admin\",\n    enrollment_status: \"applied\",\n    course_id: Usercourserow.course_id,\n    admin_id: \"sathya\",\n    followup_datetime: datetime\n  };\n  axios.post('http://103.142.165.146:8080/smarter-learnings/enrollments/', Applydata).then(response => {\n    console.log(response);\n\n    if (response.data.status == \"Success\") {\n      toast(response.data.Description);\n    } else {\n      toast('Update Failed');\n    }\n  }).catch(error => {\n    console.log(error);\n    toast('Its Time to Grab a Coffee');\n  });\n}\n\n_c2 = Apply;\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"course_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_description\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_type\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_sub_type\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"course_duration\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  Applycourse: data => {\n    const task = tasks.find(t => t.course_id === data.course_id);\n    Apply(task);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Job = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"COURSES\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_id\",\n        label: \"Course ID\",\n        placeholder: \"Course ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_description\",\n        label: \"Course Description\",\n        placeholder: \"Course Description\",\n        hideInUpdateForm: true,\n        render: DescriptionRenderer,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_type\",\n        label: \"Course Type\",\n        placeholder: \"Course Type\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_sub_type\",\n        label: \"Course Sub Type\",\n        placeholder: \"Course Sub Type\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_fees\",\n        label: \"Course Fees\",\n        placeholder: \"Course Fees\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"course_duration\",\n        label: \"Course Duration\",\n        placeholder: \"Course Duration\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Course Apply Process\",\n      message: \"Apply\",\n      onSubmit: task => service.Applycourse(task),\n      trigger: \"Apply\",\n      submitText: \"Apply\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.course_id) {\n          errors.course_id = \"Please, provide Course ID\";\n        }\n\n        if (!values.course_description) {\n          errors.course_description = \"Please, provide Course Description\";\n        }\n\n        if (!values.course_type) {\n          errors.course_type = \"Please, provide Course Type\";\n        }\n\n        if (!values.course_sub_type) {\n          errors.course_sub_type = \"Please, provide Course SubType\";\n        }\n\n        if (!values.course_fees) {\n          errors.course_fees = \"Please, provide Course Fees\";\n        }\n\n        if (!values.course_duration) {\n          errors.course_duration = \"Please, provide Course Duration\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 7,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 136,\n  columnNumber: 3\n}, this);\n\n_c3 = Job;\n\nclass FacultyAdminJobdata extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Job, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default FacultyAdminJobdata;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"Apply\");\n$RefreshReg$(_c3, \"Job\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/FacultyAdminJobdata.js"],"names":["React","axios","Component","ToastContainer","toast","CRUDTable","Fields","Field","UpdateForm","Pagination","configure","sessiondetails","JSON","parse","localStorage","getItem","today","Date","datetime","getDate","getMonth","getFullYear","DescriptionRenderer","field","tasks","getTask","testTask","Apply","Usercourserow","Applydata","user_email","email","user_name","userName","user_phone_number","phoneNumber","enrollment_type","enrollment_status","course_id","admin_id","followup_datetime","post","then","response","console","log","data","status","Description","catch","error","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","Applycourse","task","find","t","styles","container","margin","width","Job","values","errors","course_description","course_type","course_sub_type","course_fees","course_duration","FacultyAdminJobdata","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../CRUDTable.css\";\r\nimport { Component } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  UpdateForm,\r\n  Pagination\r\n} from \"react-crud-table\";\r\n\r\ntoast.configure()\r\n\r\nconst sessiondetails=JSON.parse(localStorage.getItem(\"sessiondetails\"));\r\n\r\nvar today = new Date(),\r\ndatetime = today.getDate() +'-' + (today.getMonth() + 1) + '-' + today.getFullYear()\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\n\r\nlet tasks = [];\r\n\r\nfunction  getTask(testTask){\r\n  tasks = testTask;\r\n  // console.log(tasks);\r\n}\r\n\r\nfunction Apply(Usercourserow){\r\nvar Applydata = {\r\n            user_email: sessiondetails.email,\r\n            user_name: sessiondetails.userName,\r\n            user_phone_number: sessiondetails.phoneNumber,\r\n            enrollment_type: \"admin\",\r\n            enrollment_status: \"applied\",\r\n            course_id: Usercourserow.course_id,\r\n            admin_id: \"sathya\",\r\n            followup_datetime: datetime\r\n}\r\naxios\r\n      .post('http://103.142.165.146:8080/smarter-learnings/enrollments/', Applydata )\r\n      .then(response => {\r\n        console.log(response)\r\n         if(response.data.status ==\"Success\"){\r\n           toast(response.data.Description);\r\n         }\r\n         else{\r\n           toast('Update Failed')\r\n         }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        toast('Its Time to Grab a Coffee')\r\n      })\r\n}\r\n\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"course_id\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  } \r\n  else if (data.field === \"course_description\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"course_type\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"course_sub_type\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"course_duration\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\n// let count = tasks.length;\r\n// console.log(count);\r\nconst service = {\r\n  fetchItems: payload => {\r\n    const { activePage, itemsPerPage } = payload.pagination;\r\n    const start = (activePage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result.slice(start, end));\r\n  },\r\n  fetchTotal: payload => {\r\n    return Promise.resolve(tasks.length);\r\n  },\r\n  Applycourse: data => {\r\n    const task = tasks.find(t => t.course_id === data.course_id);\r\n    Apply(task);\r\n    return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst Job = () => (\r\n  \r\n  \r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"COURSES\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"course_id\" label=\"Course ID\" placeholder=\"Course ID\" readOnly />\r\n        <Field name=\"course_description\" label=\"Course Description\" placeholder=\"Course Description\"  hideInUpdateForm render={DescriptionRenderer} readOnly />\r\n        <Field name=\"course_type\" label=\"Course Type\" placeholder=\"Course Type\" readOnly />\r\n        <Field name=\"course_sub_type\" label=\"Course Sub Type\" placeholder=\"Course Sub Type\" readOnly />\r\n        <Field name=\"course_fees\" label=\"Course Fees\" placeholder=\"Course Fees\" readOnly />\r\n        <Field name=\"course_duration\" label=\"Course Duration\" placeholder=\"Course Duration\" readOnly />\r\n      </Fields>\r\n      \r\n      <UpdateForm\r\n        title=\"Course Apply Process\"\r\n        message=\"Apply\"\r\n        onSubmit={task => service.Applycourse(task)}\r\n        trigger = \"Apply\"\r\n        submitText=\"Apply\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.course_id) {\r\n            errors.course_id = \"Please, provide Course ID\";\r\n          }\r\n\r\n          if (!values.course_description) {\r\n            errors.course_description = \"Please, provide Course Description\";\r\n          }\r\n\r\n          if (!values.course_type) {\r\n            errors.course_type = \"Please, provide Course Type\";\r\n          }\r\n\r\n          if (!values.course_sub_type) {\r\n            errors.course_sub_type = \"Please, provide Course SubType\";\r\n          }\r\n          if (!values.course_fees) {\r\n            errors.course_fees = \"Please, provide Course Fees\";\r\n          }\r\n          if (!values.course_duration) {\r\n            errors.course_duration = \"Please, provide Course Duration\";\r\n          }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <Pagination\r\n        itemsPerPage={7}\r\n        activePage = {1}\r\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nclass FacultyAdminJobdata extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        getTask(this.props.data);\r\n        }\r\n    render() { \r\n      return ( <div>\r\n      <Job/> \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default FacultyAdminJobdata;"]},"metadata":{},"sourceType":"module"}