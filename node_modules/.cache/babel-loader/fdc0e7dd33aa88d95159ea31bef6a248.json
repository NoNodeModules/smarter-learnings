{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\AdminFacultyTableData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask; // console.log(tasks);\n}\n\nfunction PostFaculty(AdminFacultysRow) {\n  axios.post('http://103.142.165.146:8080/smarter-learnings/employee', AdminFacultysRow).then(response => {\n    if (response.data.status == \"Success\") {\n      window.location.reload(\"/\");\n    } else {\n      toast('Update Failed');\n    }\n  }).catch(error => {\n    toast('Update Failed');\n  });\n}\n\n_c2 = PostFaculty;\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"faculty_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"name\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"email\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"address\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"gender\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"qualification\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"qualification\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"emy_type\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"createdBy\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"updatedBy\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    PostFaculty(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.faculty_id === data.faculty_id);\n    task.name = data.name;\n    task.email = data.email;\n    task.phone_number = data.phone_number;\n    task.address = data.address;\n    task.gender = data.gender;\n    task.DOB = data.DOB;\n    task.year_of_appointment = data.year_of_appointment;\n    task.salary = data.salary;\n    task.exp = data.exp;\n    task.qualification = data.qualification;\n    task.photo = data.photo;\n    task.emy_type = data.emy_type;\n    task.CreatedDateTime = data.CreatedDateTime;\n    task.UpdatedDateTime = data.UpdatedDateTime;\n    task.createdBy = data.createdBy;\n    task.createdDateTime = data.createdDateTime;\n    task.updatedDateTime = data.updatedDateTime;\n    task.dob = data.dob;\n    task.updatedBy = data.updatedBy;\n    PostFaculty(task);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Facultytest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"Faculty\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"faculty_id\",\n        label: \"Faculty ID\",\n        placeholder: \"Faculty ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"name\",\n        label: \"Name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        label: \"Email\",\n        placeholder: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"phone_number\",\n        label: \"Phone Number\",\n        placeholder: \"Phone Number\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"address\",\n        label: \"Address\",\n        placeholder: \"Address\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"gender\",\n        label: \"Gender\",\n        placeholder: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"DOB\",\n        label: \"Date Of Birth\",\n        placeholder: \"Date Of Birth\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"year_of_appointment\",\n        label: \"Year Of Appointment\",\n        placeholder: \"Year Of Appointment\",\n        type: \"date\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"salary\",\n        label: \"Salary\",\n        placeholder: \"Salary\",\n        type: \"number\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"exp\",\n        label: \"Experience\",\n        placeholder: \"Experience\",\n        type: \"number\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"qualification\",\n        label: \"Qualification\",\n        placeholder: \"Qualification\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"emy_type\",\n        label: \"Employee Type\",\n        placeholder: \"Employee Type\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"CreatedDateTime\",\n        label: \"Created Date & Time\",\n        placeholder: \"Created Date Time\",\n        hideFromTable: true,\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"UpdatedDateTime\",\n        label: \"Updata Data & time\",\n        placeholder: \"Updata Data & time\",\n        hideFromTable: true,\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"createdBy\",\n        label: \"Created By\",\n        placeholder: \"Created By\",\n        hideFromTable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Faculty Update Process\",\n      message: \"Update Faculty\",\n      trigger: \"View\",\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.faculty_id) {\n          errors.faculty_id = \"Please, provide Faculty ID\";\n        }\n\n        if (!values.name) {\n          errors.name = \"Please, provide Name\";\n        }\n\n        if (!values.email) {\n          errors.email = \"Please, provide Email\";\n        }\n\n        if (!values.phone_number) {\n          errors.phone_number = \"Please, provide Phone Number\";\n        }\n\n        if (!values.gender) {\n          errors.gender = \"Please, provide Gender\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 182,\n  columnNumber: 3\n}, this);\n\n_c3 = Facultytest;\n\nclass AdminFacultyTableData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Facultytest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminFacultyTableData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"PostFaculty\");\n$RefreshReg$(_c3, \"Facultytest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/AdminFacultyTableData.js"],"names":["React","axios","Component","toast","AiIcons","IoIcons","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","Pagination","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","PostFaculty","AdminFacultysRow","post","then","response","data","status","window","location","reload","catch","error","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","faculty_id","name","email","phone_number","address","gender","DOB","year_of_appointment","salary","exp","qualification","photo","emy_type","CreatedDateTime","UpdatedDateTime","createdBy","createdDateTime","updatedDateTime","dob","updatedBy","styles","container","margin","width","Facultytest","values","errors","AdminFacultyTableData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../CRUDTable.css\";\r\nimport { Component } from \"react\";\r\nimport { toast } from 'react-toastify';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  DeleteForm,\r\n  Pagination\r\n} from \"react-crud-table\";\r\n\r\ntoast.configure()\r\n\r\n// Component's Base CSS\r\n//import \"./index.css\";\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\nconsole.log();\r\nlet tasks = [];\r\n\r\nfunction  getTask(testTask){\r\n  tasks = testTask;\r\n  // console.log(tasks);\r\n}\r\n\r\nfunction PostFaculty(AdminFacultysRow){\r\naxios\r\n      .post('http://103.142.165.146:8080/smarter-learnings/employee', AdminFacultysRow )\r\n      .then(response => {\r\n        if(response.data.status ==\"Success\"){\r\n          window.location.reload(\"/\");\r\n        }\r\n        else{\r\n          toast('Update Failed')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        toast('Update Failed')\r\n      })\r\n}\r\n\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"faculty_id\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  } \r\n  else if (data.field === \"name\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"email\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"address\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"gender\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"qualification\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"qualification\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"emy_type\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"createdBy\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"updatedBy\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\n// let count = tasks.length;\r\n// console.log(count);\r\nconst service = {\r\n  fetchItems: payload => {\r\n    const { activePage, itemsPerPage } = payload.pagination;\r\n    const start = (activePage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result.slice(start, end));\r\n  },\r\n  fetchTotal: payload => {\r\n    return Promise.resolve(tasks.length);\r\n  },\r\n  create: task => {\r\n    tasks.push({\r\n     });\r\n     PostFaculty(task);\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.faculty_id === data.faculty_id);\r\n    task.name = data.name;\r\n    task.email = data.email;\r\n    task.phone_number = data.phone_number;\r\n    task.address = data.address;\r\n    task.gender = data.gender;\r\n    task.DOB = data.DOB;\r\n    task.year_of_appointment = data.year_of_appointment;\r\n    task.salary = data.salary;\r\n    task.exp = data.exp;\r\n    task.qualification = data.qualification;\r\n    task.photo = data.photo;\r\n    task.emy_type = data.emy_type;\r\n    task.CreatedDateTime = data.CreatedDateTime;\r\n    task.UpdatedDateTime = data.UpdatedDateTime;\r\n    task.createdBy = data.createdBy;\r\n    task.createdDateTime = data.createdDateTime;\r\n    task.updatedDateTime = data.updatedDateTime;\r\n    task.dob = data.dob;\r\n    task.updatedBy = data.updatedBy;\r\n\r\n    PostFaculty(task);\r\n    return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst Facultytest = () => (\r\n  \r\n  \r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"Faculty\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"faculty_id\" label=\"Faculty ID\" placeholder=\"Faculty ID\" readOnly />\r\n        <Field name=\"name\" label=\"Name\" placeholder=\"Name\"  />\r\n        <Field name=\"email\" label=\"Email\" placeholder=\"Email\" type=\"email\"/>\r\n        <Field name=\"phone_number\" label=\"Phone Number\" placeholder=\"Phone Number\" type=\"number\" />\r\n        <Field name=\"address\" label=\"Address\" placeholder=\"Address\" hideFromTable />\r\n        <Field name=\"gender\" label=\"Gender\" placeholder=\"Gender\" />\r\n        <Field name=\"DOB\" label=\"Date Of Birth\" placeholder=\"Date Of Birth\" hideFromTable />\r\n        <Field name=\"year_of_appointment\" label=\"Year Of Appointment\" placeholder=\"Year Of Appointment\" type = \"date\" hideFromTable/>\r\n        <Field name=\"salary\" label=\"Salary\" placeholder=\"Salary\" type = \"number\" hideFromTable />\r\n        <Field name=\"exp\" label=\"Experience\" placeholder=\"Experience\" type = \"number\" hideFromTable />\r\n        <Field name=\"qualification\" label=\"Qualification\" placeholder=\"Qualification\"  hideFromTable />\r\n        <Field name=\"emy_type\" label=\"Employee Type\" placeholder=\"Employee Type\" hideFromTable />\r\n        <Field name=\"CreatedDateTime\" label=\"Created Date & Time\" placeholder=\"Created Date Time\" hideFromTable type=\"date\" />\r\n        <Field name=\"UpdatedDateTime\" label=\"Updata Data & time\" placeholder=\"Updata Data & time\" hideFromTable type=\"date\" />\r\n        <Field name=\"createdBy\" label=\"Created By\" placeholder=\"Created By\" hideFromTable/>\r\n\r\n      </Fields>\r\n    \r\n      <UpdateForm\r\n        title=\"Faculty Update Process\"\r\n        message=\"Update Faculty\"\r\n        trigger= \"View\"\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.faculty_id) {\r\n            errors.faculty_id = \"Please, provide Faculty ID\";\r\n          }\r\n\r\n          if (!values.name) {\r\n            errors.name = \"Please, provide Name\";\r\n          }\r\n\r\n          if (!values.email) {\r\n            errors.email = \"Please, provide Email\";\r\n          }\r\n\r\n          if (!values.phone_number) {\r\n            errors.phone_number = \"Please, provide Phone Number\";\r\n          }\r\n          if (!values.gender) {\r\n            errors.gender = \"Please, provide Gender\";\r\n          }\r\n          return errors;\r\n        }}\r\n      />\r\n      <Pagination\r\n        itemsPerPage={10}\r\n        activePage = {1}\r\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nclass AdminFacultyTableData extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        getTask(this.props.data);\r\n        }\r\n    render() { \r\n      return ( <div>\r\n      <Facultytest/> \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default AdminFacultyTableData;"]},"metadata":{},"sourceType":"module"}