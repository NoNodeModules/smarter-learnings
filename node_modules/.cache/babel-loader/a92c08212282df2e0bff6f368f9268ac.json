{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\FacultyMarksData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, DeleteForm, UpdateForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask; // console.log(tasks);\n}\n\nfunction Emailperson(AdminMarksRow) {\n  axios.post('http://103.142.165.146:8080/smarter-learnings/marks/email/', AdminMarksRow).then(response => {\n    window.location.reload();\n  }).catch(error => {\n    toast('Its Time to Grab A coffee');\n  });\n}\n\n_c2 = Emailperson;\n\nfunction PostUpdateMarks(AdminMarksRow) {\n  axios.post('http://103.142.165.146:8080/smarter-learnings/marks/', AdminMarksRow).then(response => {\n    if (response.status == 200) window.location.reload();\n  }).catch(error => {\n    toast('Its Time to Grab A coffee');\n  });\n}\n\n_c3 = PostUpdateMarks;\n\nfunction deletemarks(id) {\n  const url = \"http://103.142.165.146:8080/smarter-learnings/marks/\" + id;\n  axios.delete(url);\n  window.location.reload(\"/\");\n}\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"student_id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"name\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"grade\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"test_type\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"test_date\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    PostUpdateMarks(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    task.student_id = data.student_id;\n    task.grade = data.grade;\n    task.name = data.name;\n    task.test_type = data.test_type;\n    task.science = data.science;\n    task.social = data.social;\n    task.mathematics = data.mathematics;\n    task.first_language = data.first_language;\n    task.second_language = data.second_language;\n    task.third_language = data.third_language;\n    task.max_score = data.max_score;\n    task.total = data.total;\n    task.test_date = data.test_date;\n    task.percentage = data.percentage;\n    Emailperson(task);\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.id === data.id);\n    deletemarks(data.id);\n    tasks = tasks.filter(t => t.id !== task.id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst MarksTest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"MARKS\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"id\",\n        label: \"ID\",\n        placeholder: \"ID\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"student_id\",\n        label: \"Student ID\",\n        placeholder: \"Student ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"grade\",\n        label: \"Grade\",\n        placeholder: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"name\",\n        label: \"Name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"test_type\",\n        label: \"Test Type\",\n        placeholder: \"Test Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"science\",\n        label: \"Science\",\n        placeholder: \"Science\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"social\",\n        label: \"Social\",\n        placeholder: \"Social\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"mathematics\",\n        label: \"Mathematics\",\n        placeholder: \"Mathematics\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"first_language\",\n        label: \"First Language\",\n        placeholder: \"First Language\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"second_language\",\n        label: \"Second Language\",\n        placeholder: \"Second Language\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"third_language\",\n        label: \"Third Language\",\n        placeholder: \"Third Language\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"max_score\",\n        label: \"Max Score\",\n        placeholder: \"Max Score\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"total\",\n        label: \"Total\",\n        placeholder: \"Total\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"test_date\",\n        label: \"Test Date\",\n        placeholder: \"Test Date\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"percentage\",\n        label: \"Percentage\",\n        placeholder: \"Percentage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n      title: \"Marks Creation\",\n      message: \"Create a new Marks!\",\n      trigger: \"Create Marks\",\n      onSubmit: task => service.create(task),\n      submitText: \"Create\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.student_id) {\n          errors.student_id = \"Please, provide Student ID\";\n        }\n\n        if (!values.grade) {\n          errors.grade = \"Please, provide Grade\";\n        }\n\n        if (!values.name) {\n          errors.name = \"Please, provide Name\";\n        }\n\n        if (!values.test_type) {\n          errors.test_type = \"Please, provide Test Type\";\n        }\n\n        if (!values.science) {\n          errors.science = \"Please, provide Science Marks\";\n        }\n\n        if (!values.social) {\n          errors.social = \"Please, provide Social Marks\";\n        }\n\n        if (!values.mathematics) {\n          errors.mathematics = \"Please, provide Mathematics Marks\";\n        }\n\n        if (!values.first_language) {\n          errors.first_language = \"Please, provide First Language Marks\";\n        }\n\n        if (!values.second_language) {\n          errors.second_language = \"Please, provide Second Language Marks\";\n        }\n\n        if (!values.third_language) {\n          errors.third_language = \"Please, provide Third Language Marks\";\n        }\n\n        if (!values.max_score) {\n          errors.max_score = \"Please, provide Maximum Marks\";\n        }\n\n        if (!values.total) {\n          errors.total = \"Please, provide Total\";\n        }\n\n        if (!values.test_date) {\n          errors.test_date = \"Please, provide Test Date\";\n        }\n\n        if (!values.percentage) {\n          errors.percentage = \"Please, provide Percentage\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Marks Email Process\",\n      message: \"Email student\",\n      trigger: \"Email\",\n      onSubmit: task => service.update(task),\n      submitText: \"Email\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.student_id) {\n          errors.student_id = \"Please, provide Student ID\";\n        }\n\n        if (!values.grade) {\n          errors.grade = \"Please, provide Grade\";\n        }\n\n        if (!values.name) {\n          errors.name = \"Please, provide Name\";\n        }\n\n        if (!values.test_type) {\n          errors.test_type = \"Please, provide Test Type\";\n        }\n\n        if (!values.science) {\n          errors.science = \"Please, provide Science Marks\";\n        }\n\n        if (!values.social) {\n          errors.social = \"Please, provide Social Marks\";\n        }\n\n        if (!values.mathematics) {\n          errors.mathematics = \"Please, provide Mathematics Marks\";\n        }\n\n        if (!values.first_language) {\n          errors.first_language = \"Please, provide First Language Marks\";\n        }\n\n        if (!values.second_language) {\n          errors.second_language = \"Please, provide Second Language Marks\";\n        }\n\n        if (!values.third_language) {\n          errors.third_language = \"Please, provide Third Language Marks\";\n        }\n\n        if (!values.max_score) {\n          errors.max_score = \"Please, provide Maximum Marks\";\n        }\n\n        if (!values.total) {\n          errors.total = \"Please, provide Total\";\n        }\n\n        if (!values.test_date) {\n          errors.test_date = \"Please, provide Test Date\";\n        }\n\n        if (!values.percentage) {\n          errors.percentage = \"Please, provide Percentage\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n      title: \"Marks Delete Process\",\n      message: \"Are you sure you want to delete the Marks?\",\n      trigger: \"Delete\",\n      onSubmit: task => service.delete(task),\n      submitText: \"Delete\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.student_id) {\n          errors.student_id = \"Please, provide Student ID\";\n        }\n\n        if (!values.grade) {\n          errors.grade = \"Please, provide Grade\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 163,\n  columnNumber: 3\n}, this);\n\n_c4 = MarksTest;\n\nclass FacultyMarksData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MarksTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default FacultyMarksData;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"Emailperson\");\n$RefreshReg$(_c3, \"PostUpdateMarks\");\n$RefreshReg$(_c4, \"MarksTest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/FacultyMarksData.js"],"names":["React","axios","Component","ToastContainer","toast","CRUDTable","Fields","Field","CreateForm","DeleteForm","UpdateForm","Pagination","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","Emailperson","AdminMarksRow","post","then","response","window","location","reload","catch","error","PostUpdateMarks","status","deletemarks","id","url","delete","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","data","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","student_id","grade","name","test_type","science","social","mathematics","first_language","second_language","third_language","max_score","total","test_date","percentage","filter","styles","container","margin","width","MarksTest","values","errors","FacultyMarksData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, {\n  Fields,\n  Field,\n  CreateForm,\n  DeleteForm,\n  UpdateForm,\n  Pagination\n} from \"react-crud-table\";\n\ntoast.configure()\n\n// Component's Base CSS\n//import \"./index.css\";\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\nconsole.log();\nlet tasks = [];\n\nfunction  getTask(testTask){\n  tasks = testTask;\n  // console.log(tasks);\n}\n\nfunction Emailperson(AdminMarksRow){\naxios\n      .post('http://103.142.165.146:8080/smarter-learnings/marks/email/', AdminMarksRow )\n      .then(response => {\n        window.location.reload();\n      })\n      .catch(error => {\n        toast('Its Time to Grab A coffee')\n      })\n}\n\nfunction PostUpdateMarks(AdminMarksRow){\naxios\n      .post('http://103.142.165.146:8080/smarter-learnings/marks/', AdminMarksRow )\n      .then(response => {\n        if(response.status==200)\n        window.location.reload();\n      })\n      .catch(error => {\n        toast('Its Time to Grab A coffee')\n      })\n}\n\nfunction deletemarks(id){\n  const url = \"http://103.142.165.146:8080/smarter-learnings/marks/\"+id;\n  axios.delete(url)\n  window.location.reload(\"/\")\n}\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"student_id\") {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  } \n  else if (data.field === \"name\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"grade\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"test_type\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"test_date\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.NUMBER_ASCENDING(mapper)\n        : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\n// let count = tasks.length;\n// console.log(count);\nconst service = {\n  fetchItems: payload => {\n    const { activePage, itemsPerPage } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({\n     });\n     PostUpdateMarks(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    task.student_id = data.student_id;\n    task.grade = data.grade;\n    task.name = data.name;\n    task.test_type = data.test_type;\n    task.science = data.science;\n    task.social = data.social;\n    task.mathematics = data.mathematics;\n    task.first_language = data.first_language;\n    task.second_language = data.second_language;\n    task.third_language = data.third_language;\n    task.max_score = data.max_score;\n    task.total = data.total;\n    task.test_date = data.test_date;\n    task.percentage = data.percentage;\n\n    Emailperson(task);\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.id === data.id);\n    deletemarks(data.id);\n    tasks = tasks.filter(t => t.id !== task.id);\n    return Promise.resolve(task);\n  }\n};\n\nconst styles = {\n  container: { margin: \"auto\", width: \"fit-content\" }\n};\n\nconst MarksTest  = () => (\n  \n  \n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"MARKS\"\n      fetchItems={payload => service.fetchItems(payload)}\n    >\n      <Fields>\n        <Field name=\"id\" label=\"ID\" placeholder=\"ID\" type=\"number\" />\n        <Field name=\"student_id\" label=\"Student ID\" placeholder=\"Student ID\" />\n        <Field name=\"grade\" label=\"Grade\" placeholder=\"Grade\" />\n        <Field name=\"name\" label=\"Name\" placeholder=\"Name\" />\n        <Field name=\"test_type\" label=\"Test Type\" placeholder=\"Test Type\" />\n        <Field name=\"science\" label=\"Science\" placeholder=\"Science\" type=\"number\"/>\n        <Field name=\"social\" label=\"Social\" placeholder=\"Social\" type=\"number\"/>\n        <Field name=\"mathematics\" label=\"Mathematics\" placeholder=\"Mathematics\" type=\"number\"/>\n        <Field name=\"first_language\" label=\"First Language\" placeholder=\"First Language\" type=\"number\"/>\n        <Field name=\"second_language\" label=\"Second Language\" placeholder=\"Second Language\" type=\"number\"/>\n        <Field name=\"third_language\" label=\"Third Language\" placeholder=\"Third Language\" type=\"number\"/>\n        <Field name=\"max_score\" label=\"Max Score\" placeholder=\"Max Score\" type=\"number\"/>\n        <Field name=\"total\" label=\"Total\" placeholder=\"Total\" type=\"number\"/>\n        <Field name=\"test_date\" label=\"Test Date\" placeholder=\"Test Date\" type=\"date\"/>\n        <Field name=\"percentage\" label=\"Percentage\" placeholder=\"Percentage\" />\n      </Fields>\n      <CreateForm\n        title=\"Marks Creation\"\n        message=\"Create a new Marks!\"\n        trigger=\"Create Marks\"\n        onSubmit={task => service.create(task)}\n        submitText=\"Create\"\n        validate={values => {\n          const errors = {};\n          if (!values.student_id) {\n            errors.student_id = \"Please, provide Student ID\";\n          }\n\n          if (!values.grade) {\n            errors.grade = \"Please, provide Grade\";\n          }\n\n          if (!values.name) {\n            errors.name = \"Please, provide Name\";\n          }\n          if (!values.test_type) {\n            errors.test_type = \"Please, provide Test Type\";\n          }\n          if (!values.science) {\n            errors.science = \"Please, provide Science Marks\";\n          }\n          if (!values.social) {\n            errors.social = \"Please, provide Social Marks\";\n          }\n          if (!values.mathematics) {\n            errors.mathematics = \"Please, provide Mathematics Marks\";\n          }\n          if (!values.first_language) {\n            errors.first_language = \"Please, provide First Language Marks\";\n          }\n          if (!values.second_language) {\n            errors.second_language = \"Please, provide Second Language Marks\";\n          }\n          if (!values.third_language) {\n            errors.third_language = \"Please, provide Third Language Marks\";\n          }\n          if (!values.max_score) {\n            errors.max_score = \"Please, provide Maximum Marks\";\n          }\n          if (!values.total) {\n            errors.total = \"Please, provide Total\";\n          }\n          if (!values.test_date) {\n            errors.test_date = \"Please, provide Test Date\";\n          }\n          if (!values.percentage) {\n            errors.percentage = \"Please, provide Percentage\";\n          }\n\n\n          return errors;\n        }}\n      />\n <UpdateForm\n        title=\"Marks Email Process\"\n        message=\"Email student\"\n        trigger= \"Email\"\n        onSubmit={task => service.update(task)}\n        submitText=\"Email\"\n        validate={values => {\n          const errors = {};\n\n          if (!values.student_id) {\n            errors.student_id = \"Please, provide Student ID\";\n          }\n\n          if (!values.grade) {\n            errors.grade = \"Please, provide Grade\";\n          }\n\n          if (!values.name) {\n            errors.name = \"Please, provide Name\";\n          }\n          if (!values.test_type) {\n            errors.test_type = \"Please, provide Test Type\";\n          }\n          if (!values.science) {\n            errors.science = \"Please, provide Science Marks\";\n          }\n          if (!values.social) {\n            errors.social = \"Please, provide Social Marks\";\n          }\n          if (!values.mathematics) {\n            errors.mathematics = \"Please, provide Mathematics Marks\";\n          }\n          if (!values.first_language) {\n            errors.first_language = \"Please, provide First Language Marks\";\n          }\n          if (!values.second_language) {\n            errors.second_language = \"Please, provide Second Language Marks\";\n          }\n          if (!values.third_language) {\n            errors.third_language = \"Please, provide Third Language Marks\";\n          }\n          if (!values.max_score) {\n            errors.max_score = \"Please, provide Maximum Marks\";\n          }\n          if (!values.total) {\n            errors.total = \"Please, provide Total\";\n          }\n          if (!values.test_date) {\n            errors.test_date = \"Please, provide Test Date\";\n          }\n          if (!values.percentage) {\n            errors.percentage = \"Please, provide Percentage\";\n          }\n\n\n          return errors;\n        }}\n        />\n    <DeleteForm\n        title=\"Marks Delete Process\"\n        message=\"Are you sure you want to delete the Marks?\"\n        trigger=\"Delete\"\n        onSubmit={task => service.delete(task)}\n        submitText=\"Delete\"\n        validate={values => {\n          const errors = {};\n          if (!values.student_id) {\n            errors.student_id = \"Please, provide Student ID\";\n          }\n\n          if (!values.grade) {\n            errors.grade = \"Please, provide Grade\";\n          }\n\n\n          return errors;\n        }}\n      />\n      <Pagination\n        itemsPerPage={10}\n        activePage = {1}\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\n      />\n    </CRUDTable>\n  </div>\n\n)\n\n\nclass FacultyMarksData extends Component {\n    constructor(props) {\n        super(props); \n        getTask(this.props.data);\n        }\n    render() { \n      return ( <div>\n      <MarksTest /> \n      </div>\n      );\n    }\n  }\n   \n  export default FacultyMarksData;"]},"metadata":{},"sourceType":"module"}