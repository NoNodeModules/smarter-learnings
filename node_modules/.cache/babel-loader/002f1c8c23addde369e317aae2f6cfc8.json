{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\UserData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask; // console.log(tasks);\n}\n\nfunction postupdateuser(rowuserdata) {\n  var responseuser = null;\n  axios.post('http://103.142.165.146:8080/smarter-learnings/users/', rowuserdata).then(response => {\n    window.location.reload();\n  }).catch(error => {\n    toast('Update Failed');\n  });\n}\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"user_email\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"user_name\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"user_password\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    tasks.push({});\n    postupdateuser(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.user_email === data.user_email);\n    task.user_name = data.user_name;\n    task.user_password = data.user_password;\n    task.user_phone_number = data.user_phone_number;\n    postupdateuser(task);\n    return Promise.resolve(task); //    if(postupdateuser(task))\n    // { window.location.reload(\"\");\n    //   return Promise.resolve(task);\n    // }\n    // else\n    // { //(toast)console.log(\"Failed\")\n    //   return Promise.resolve(data);\n    // }\n  },\n  delete: data => {\n    const task = tasks.find(t => t.user_email === data.user_email);\n    tasks = tasks.filter(t => t.user_email !== task.user_email);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst Usertest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"USERS\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"user_email\",\n        label: \"Email\",\n        placeholder: \"Email\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"user_name\",\n        label: \"Name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"user_password\",\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"user_phone_number\",\n        label: \"Phone Number\",\n        placeholder: \"Phone Number\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"User Update Process\",\n      message: \"Update User\",\n      trigger: \"Update\",\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.user_email) {\n          errors.user_email = \"Please, provide User's Email\";\n        }\n\n        if (!values.user_name) {\n          errors.user_name = \"Please, provide User name\";\n        }\n\n        if (!values.user_password) {\n          errors.user_password = \"Please, provide User Password\";\n        }\n\n        if (!values.user_phone_number) {\n          errors.user_phone_number = \"Please, provide User Phone Number\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 7,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 128,\n  columnNumber: 3\n}, this);\n\n_c2 = Usertest;\n\nclass UserData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Usertest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default UserData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"Usertest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/UserData.js"],"names":["React","axios","Component","ToastContainer","toast","CRUDTable","Fields","Field","CreateForm","UpdateForm","Pagination","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","postupdateuser","rowuserdata","responseuser","post","then","response","window","location","reload","catch","error","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","data","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","user_email","user_name","user_password","user_phone_number","delete","filter","styles","container","margin","width","Usertest","values","errors","UserData","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,SAAP,IACEC,MADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,UALF,QAMO,kBANP;;AAQAN,KAAK,CAACO,SAAN,G,CAEA;AACA;;AACA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAAe,yBAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,QAA3C;;KAAMD,mB;AACNE,OAAO,CAACC,GAAR;AACA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,SAAUC,OAAV,CAAkBC,QAAlB,EAA2B;AACzBF,EAAAA,KAAK,GAAGE,QAAR,CADyB,CAEzB;AACD;;AAED,SAASC,cAAT,CAAwBC,WAAxB,EAAoC;AAClC,MAAIC,YAAY,GAAG,IAAnB;AACFpB,EAAAA,KAAK,CACEqB,IADP,CACY,sDADZ,EACoEF,WADpE,EAEOG,IAFP,CAEYC,QAAQ,IAAI;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAJP,EAKOC,KALP,CAKaC,KAAK,IAAI;AACdzB,IAAAA,KAAK,CAAC,eAAD,CAAL;AACD,GAPP;AAQC;;AACD,MAAM0B,OAAO,GAAG;AACdC,EAAAA,gBAAgB,EAAEC,MAAM,IAAI,CAACC,CAAD,EAAIC,CAAJ,KAAUF,MAAM,CAACC,CAAD,CAAN,GAAYD,MAAM,CAACE,CAAD,CAD1C;AAEdC,EAAAA,iBAAiB,EAAEH,MAAM,IAAI,CAACC,CAAD,EAAIC,CAAJ,KAAUF,MAAM,CAACE,CAAD,CAAN,GAAYF,MAAM,CAACC,CAAD,CAF3C;AAGdG,EAAAA,gBAAgB,EAAEJ,MAAM,IAAI,CAACC,CAAD,EAAIC,CAAJ,KAAUF,MAAM,CAACC,CAAD,CAAN,CAAUI,aAAV,CAAwBL,MAAM,CAACE,CAAD,CAA9B,CAHxB;AAIdI,EAAAA,iBAAiB,EAAEN,MAAM,IAAI,CAACC,CAAD,EAAIC,CAAJ,KAAUF,MAAM,CAACE,CAAD,CAAN,CAAUG,aAAV,CAAwBL,MAAM,CAACC,CAAD,CAA9B;AAJzB,CAAhB;;AAOA,MAAMM,SAAS,GAAGC,IAAI,IAAI;AACxB,QAAMR,MAAM,GAAGS,CAAC,IAAIA,CAAC,CAACD,IAAI,CAAC3B,KAAN,CAArB;;AACA,MAAI6B,MAAM,GAAGZ,OAAO,CAACM,gBAAR,CAAyBJ,MAAzB,CAAb;;AAEA,MAAIQ,IAAI,CAAC3B,KAAL,KAAe,YAAnB,EAAiC;AAC/B6B,IAAAA,MAAM,GACJF,IAAI,CAACG,SAAL,KAAmB,WAAnB,GACIb,OAAO,CAACM,gBAAR,CAAyBJ,MAAzB,CADJ,GAEIF,OAAO,CAACQ,iBAAR,CAA0BN,MAA1B,CAHN;AAID,GALD,MAMK,IAAIQ,IAAI,CAAC3B,KAAL,KAAe,WAAnB,EAA+B;AAClC6B,IAAAA,MAAM,GACJF,IAAI,CAACG,SAAL,KAAmB,WAAnB,GACIb,OAAO,CAACM,gBAAR,CAAyBJ,MAAzB,CADJ,GAEIF,OAAO,CAACQ,iBAAR,CAA0BN,MAA1B,CAHN;AAID,GALI,MAMA,IAAIQ,IAAI,CAAC3B,KAAL,KAAe,eAAnB,EAAmC;AACtC6B,IAAAA,MAAM,GACJF,IAAI,CAACG,SAAL,KAAmB,WAAnB,GACIb,OAAO,CAACM,gBAAR,CAAyBJ,MAAzB,CADJ,GAEIF,OAAO,CAACQ,iBAAR,CAA0BN,MAA1B,CAHN;AAID,GALI,MAMA;AACHU,IAAAA,MAAM,GACJF,IAAI,CAACG,SAAL,KAAmB,WAAnB,GACIb,OAAO,CAACC,gBAAR,CAAyBC,MAAzB,CADJ,GAEIF,OAAO,CAACK,iBAAR,CAA0BH,MAA1B,CAHN;AAID;;AAED,SAAOU,MAAP;AACD,CA9BD,C,CAgCA;AACA;;;AACA,MAAME,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAEC,OAAO,IAAI;AACrB,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA+BF,OAAO,CAACG,UAA7C;AACA,UAAMC,KAAK,GAAG,CAACH,UAAU,GAAG,CAAd,IAAmBC,YAAjC;AACA,UAAMG,GAAG,GAAGD,KAAK,GAAGF,YAApB;AACA,QAAII,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWtC,KAAX,CAAb;AACAoC,IAAAA,MAAM,GAAGA,MAAM,CAACG,IAAP,CAAYhB,SAAS,CAACO,OAAO,CAACS,IAAT,CAArB,CAAT;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBL,MAAM,CAACM,KAAP,CAAaR,KAAb,EAAoBC,GAApB,CAAhB,CAAP;AACD,GARa;AASdQ,EAAAA,UAAU,EAAEb,OAAO,IAAI;AACrB,WAAOU,OAAO,CAACC,OAAR,CAAgBzC,KAAK,CAAC4C,MAAtB,CAAP;AACD,GAXa;AAYdC,EAAAA,MAAM,EAAEC,IAAI,IAAI;AACd9C,IAAAA,KAAK,CAAC+C,IAAN,CAAW,EAAX;AAEC5C,IAAAA,cAAc,CAAC2C,IAAD,CAAd;AACD,WAAON,OAAO,CAACC,OAAR,CAAgBK,IAAhB,CAAP;AACD,GAjBa;AAkBdE,EAAAA,MAAM,EAAExB,IAAI,IAAI;AACd,UAAMsB,IAAI,GAAG9C,KAAK,CAACiD,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,UAAF,KAAiB3B,IAAI,CAAC2B,UAAtC,CAAb;AACAL,IAAAA,IAAI,CAACM,SAAL,GAAkB5B,IAAI,CAAC4B,SAAvB;AACAN,IAAAA,IAAI,CAACO,aAAL,GAAqB7B,IAAI,CAAC6B,aAA1B;AACAP,IAAAA,IAAI,CAACQ,iBAAL,GAAyB9B,IAAI,CAAC8B,iBAA9B;AACAnD,IAAAA,cAAc,CAAC2C,IAAD,CAAd;AACA,WAAON,OAAO,CAACC,OAAR,CAAgBK,IAAhB,CAAP,CANc,CAOd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjCa;AAkCdS,EAAAA,MAAM,EAAE/B,IAAI,IAAI;AACd,UAAMsB,IAAI,GAAG9C,KAAK,CAACiD,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,UAAF,KAAiB3B,IAAI,CAAC2B,UAAtC,CAAb;AACAnD,IAAAA,KAAK,GAAGA,KAAK,CAACwD,MAAN,CAAaN,CAAC,IAAIA,CAAC,CAACC,UAAF,KAAiBL,IAAI,CAACK,UAAxC,CAAR;AACA,WAAOX,OAAO,CAACC,OAAR,CAAgBK,IAAhB,CAAP;AACD;AAtCa,CAAhB;AAyCA,MAAMW,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,KAAK,EAAE;AAAzB;AADE,CAAf;;AAIA,MAAMC,QAAQ,GAAG,mBAGf;AAAK,EAAA,KAAK,EAAEJ,MAAM,CAACC,SAAnB;AAAA,yBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,UAAU,EAAE5B,OAAO,IAAIF,OAAO,CAACC,UAAR,CAAmBC,OAAnB,CAFzB;AAAA,4BAIE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,KAAK,EAAC,OAA/B;AAAuC,QAAA,WAAW,EAAC,OAAnD;AAA2D,QAAA,QAAQ;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,KAAK,EAAC,MAA9B;AAAqC,QAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,mBAAZ;AAAgC,QAAA,KAAK,EAAC,cAAtC;AAAqD,QAAA,WAAW,EAAC,cAAjE;AAAgF,QAAA,IAAI,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,qBADR;AAEE,MAAA,OAAO,EAAC,aAFV;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,QAAQ,EAAEgB,IAAI,IAAIlB,OAAO,CAACoB,MAAR,CAAeF,IAAf,CAJpB;AAKE,MAAA,UAAU,EAAC,QALb;AAME,MAAA,QAAQ,EAAEgB,MAAM,IAAI;AAClB,cAAMC,MAAM,GAAG,EAAf;;AAEA,YAAI,CAACD,MAAM,CAACX,UAAZ,EAAwB;AACtBY,UAAAA,MAAM,CAACZ,UAAP,GAAoB,8BAApB;AACD;;AAED,YAAI,CAACW,MAAM,CAACV,SAAZ,EAAuB;AACrBW,UAAAA,MAAM,CAACX,SAAP,GAAmB,2BAAnB;AACD;;AAED,YAAI,CAACU,MAAM,CAACT,aAAZ,EAA2B;AACzBU,UAAAA,MAAM,CAACV,aAAP,GAAuB,+BAAvB;AACD;;AAED,YAAI,CAACS,MAAM,CAACR,iBAAZ,EAA+B;AAC7BS,UAAAA,MAAM,CAACT,iBAAP,GAA2B,mCAA3B;AACD;;AAED,eAAOS,MAAP;AACD;AA1BH;AAAA;AAAA;AAAA;AAAA,YAbF,eAyCF,QAAC,UAAD;AACM,MAAA,YAAY,EAAE,CADpB;AAEM,MAAA,UAAU,EAAI,CAFpB;AAGM,MAAA,iBAAiB,EAAEjC,OAAO,IAAIF,OAAO,CAACe,UAAR,CAAmBb,OAAnB;AAHpC;AAAA;AAAA;AAAA;AAAA,YAzCE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAHF;;MAAM+B,Q;;AAwDN,MAAMG,QAAN,SAAuB9E,SAAvB,CAAiC;AAC7B+E,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAjE,IAAAA,OAAO,CAAC,KAAKiE,KAAL,CAAW1C,IAAZ,CAAP;AACC;;AACL2C,EAAAA,MAAM,GAAG;AACP,wBAAS;AAAA,6BACT,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA,YAAT;AAID;;AAV4B;;AAa/B,eAAeH,QAAf","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../CRUDTable.css\";\r\nimport { Component } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  Pagination\r\n} from \"react-crud-table\";\r\n\r\ntoast.configure()\r\n\r\n// Component's Base CSS\r\n//import \"./index.css\";\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\nconsole.log();\r\nlet tasks = [];\r\n\r\nfunction  getTask(testTask){\r\n  tasks = testTask;\r\n  // console.log(tasks);\r\n}\r\n\r\nfunction postupdateuser(rowuserdata){\r\n  var responseuser = null;\r\naxios\r\n      .post('http://103.142.165.146:8080/smarter-learnings/users/', rowuserdata )\r\n      .then(response => {\r\n        window.location.reload();\r\n      })\r\n      .catch(error => {\r\n        toast('Update Failed')\r\n      })\r\n}\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"user_email\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  } \r\n  else if (data.field === \"user_name\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"user_password\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\n// let count = tasks.length;\r\n// console.log(count);\r\nconst service = {\r\n  fetchItems: payload => {\r\n    const { activePage, itemsPerPage } = payload.pagination;\r\n    const start = (activePage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result.slice(start, end));\r\n  },\r\n  fetchTotal: payload => {\r\n    return Promise.resolve(tasks.length);\r\n  },\r\n  create: task => {\r\n    tasks.push({\r\n     });\r\n     postupdateuser(task);\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.user_email === data.user_email);\r\n    task.user_name =  data.user_name;\r\n    task.user_password = data.user_password;\r\n    task.user_phone_number = data.user_phone_number;\r\n    postupdateuser(task);\r\n    return Promise.resolve(task);\r\n    //    if(postupdateuser(task))\r\n    // { window.location.reload(\"\");\r\n    //   return Promise.resolve(task);\r\n    // }\r\n    // else\r\n    // { //(toast)console.log(\"Failed\")\r\n    //   return Promise.resolve(data);\r\n    // }\r\n  },\r\n  delete: data => {\r\n    const task = tasks.find(t => t.user_email === data.user_email);\r\n    tasks = tasks.filter(t => t.user_email !== task.user_email);\r\n    return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst Usertest = () => (\r\n  \r\n  \r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"USERS\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"user_email\" label=\"Email\" placeholder=\"Email\" readOnly />\r\n        <Field name=\"user_name\" label=\"Name\" placeholder=\"Name\"  />\r\n        <Field\r\n          name=\"user_password\"\r\n          label=\"Password\"\r\n        />\r\n        <Field name=\"user_phone_number\" label=\"Phone Number\" placeholder=\"Phone Number\" type=\"number\" />\r\n      </Fields>\r\n      <UpdateForm\r\n        title=\"User Update Process\"\r\n        message=\"Update User\"\r\n        trigger=\"Update\"\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.user_email) {\r\n            errors.user_email = \"Please, provide User's Email\";\r\n          }\r\n\r\n          if (!values.user_name) {\r\n            errors.user_name = \"Please, provide User name\";\r\n          }\r\n\r\n          if (!values.user_password) {\r\n            errors.user_password = \"Please, provide User Password\";\r\n          }\r\n\r\n          if (!values.user_phone_number) {\r\n            errors.user_phone_number = \"Please, provide User Phone Number\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n  <Pagination\r\n        itemsPerPage={7}\r\n        activePage = {1}\r\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nclass UserData extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        getTask(this.props.data);\r\n        }\r\n    render() { \r\n      return ( <div>\r\n      <Usertest/> \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default UserData;"]},"metadata":{},"sourceType":"module"}