{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\AdminOfficeDocumentsData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm, Pagination } from \"react-crud-table\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  console.log(tasks);\n  tasks = testTask; // console.log(tasks);\n}\n\nfunction DownloadFile(AdminDocumentsRow) {\n  const url = 'http://103.142.165.146:8080/smarter-learnings/office-file/' + AdminDocumentsRow.id;\n  window.location.href = url;\n}\n\n_c2 = DownloadFile;\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"id\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"fileName\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"file_size\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  } else if (data.field === \"uploaded_date\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"fileType\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    DownloadFile(task);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst DocumentsTest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: [/*#__PURE__*/_jsxDEV(Link, {\n    to: \"/uploadsingle\",\n    children: [\"    \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Submit\",\n      children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlinePlusCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"DOCUMENTS\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"id\",\n        label: \"File ID\",\n        placeholder: \"File ID\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"fileName\",\n        label: \"File Name\",\n        placeholder: \"File Name\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"file_size\",\n        label: \"File Size\",\n        placeholder: \"File Size\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"uploaded_date\",\n        label: \"Date OF Uplode\",\n        placeholder: \"Date OF Uplode\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"fileType\",\n        label: \"Type\",\n        placeholder: \"Type\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"File Download \",\n      message: \"File Details\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineDownload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }, this),\n      onSubmit: task => service.update(task),\n      submitText: \"Download\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.id) {\n          errors.id = \"Please, provide Course ID\";\n        }\n\n        if (!values.fileName) {\n          errors.fileName = \"Please, provide Course Description\";\n        }\n\n        if (!values.file_size) {\n          errors.file_size = \"Please, provide Course Type\";\n        }\n\n        if (!values.uploaded_date) {\n          errors.uploaded_date = \"Please, provide Course SubType\";\n        }\n\n        if (!values.fileType) {\n          errors.fileType = \"Please, provide Course Fees\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 117,\n  columnNumber: 3\n}, this);\n\n_c3 = DocumentsTest;\n\nclass AdminOfficeDocumentsData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DocumentsTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminOfficeDocumentsData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"DownloadFile\");\n$RefreshReg$(_c3, \"DocumentsTest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/AdminOfficeDocumentsData.js"],"names":["React","axios","Component","toast","AiIcons","IoIcons","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","Pagination","Link","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","DownloadFile","AdminDocumentsRow","url","id","window","location","href","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","data","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","update","task","find","t","styles","container","margin","width","DocumentsTest","values","errors","fileName","file_size","uploaded_date","fileType","AdminOfficeDocumentsData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, {\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm,\n  Pagination\n} from \"react-crud-table\";\nimport { Link } from \"react-router-dom\";\n\ntoast.configure()\n\n// Component's Base CSS\n//import \"./index.css\";\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\nconsole.log();\nlet tasks = [];\n\nfunction  getTask(testTask){\n  console.log(tasks)\n  tasks = testTask;\n  // console.log(tasks);\n}\n\nfunction DownloadFile(AdminDocumentsRow){\n  const url = 'http://103.142.165.146:8080/smarter-learnings/office-file/' + AdminDocumentsRow.id;\n window.location.href = url;\n}\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"id\") {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  } \n  else if (data.field === \"fileName\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"file_size\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.NUMBER_ASCENDING(mapper)\n        : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n  else if (data.field === \"uploaded_date\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else if (data.field === \"fileType\"){\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n  else {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.NUMBER_ASCENDING(mapper)\n        : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\n// let count = tasks.length;\n// console.log(count);\nconst service = {\n  fetchItems: payload => {\n    const { activePage, itemsPerPage } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    DownloadFile(task);\n    return Promise.resolve(task);\n  }\n};\n\nconst styles = {\n  container: { margin: \"auto\", width: \"fit-content\" }\n};\n\nconst DocumentsTest = () => (\n  \n  \n  <div style={styles.container}>\n    <Link to=\"/uploadsingle\">    <div className=\"Submit\"><AiIcons.AiOutlinePlusCircle/></div>\n</Link>\n    <CRUDTable\n      caption=\"DOCUMENTS\"\n      fetchItems={payload => service.fetchItems(payload)}\n    >\n      <Fields>\n        <Field name=\"id\" label=\"File ID\" placeholder=\"File ID\" readOnly />\n        <Field name=\"fileName\" label=\"File Name\" placeholder=\"File Name\" readOnly />\n        <Field name=\"file_size\" label=\"File Size\" placeholder=\"File Size\" readOnly />\n        <Field name=\"uploaded_date\" label=\"Date OF Uplode\" placeholder=\"Date OF Uplode\" readOnly />\n        <Field name=\"fileType\" label=\"Type\" placeholder=\"Type\" readOnly />\n      </Fields>\n      \n      <UpdateForm\n        title=\"File Download \"\n        message=\"File Details\"\n        trigger= {<AiIcons.AiOutlineDownload />}\n        onSubmit={task => service.update(task)}\n        submitText=\"Download\"\n        validate={values => {\n          const errors = {};\n\n          if (!values.id) {\n            errors.id = \"Please, provide Course ID\";\n          }\n\n          if (!values.fileName) {\n            errors.fileName = \"Please, provide Course Description\";\n          }\n\n          if (!values.file_size) {\n            errors.file_size = \"Please, provide Course Type\";\n          }\n\n          if (!values.uploaded_date) {\n            errors.uploaded_date = \"Please, provide Course SubType\";\n          }\n          if (!values.fileType) {\n            errors.fileType = \"Please, provide Course Fees\";\n          }\n          return errors;\n        }}\n\n      />\n      <Pagination\n        itemsPerPage={10}\n        activePage = {1}\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\n      />\n    </CRUDTable>\n  </div>\n\n)\n\n\nclass AdminOfficeDocumentsData extends Component {\n    constructor(props) {\n        super(props); \n        getTask(this.props.data);\n        }\n    render() { \n      return ( <div>\n      <DocumentsTest/> \n      </div>\n      );\n    }\n  }\n   \n  export default AdminOfficeDocumentsData;\n"]},"metadata":{},"sourceType":"module"}