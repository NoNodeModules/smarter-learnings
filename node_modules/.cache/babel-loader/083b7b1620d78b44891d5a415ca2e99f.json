{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Admin\\\\Graph.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Link } from 'react-router-dom';\nimport * as AiIcons from \"react-icons/ai\";\nimport Loading from \"../Loading\";\nimport { APIData } from '../Authentication/APIData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Graph extends Component {\n  async componentDidMount() {\n    const url = APIData.api + \"perf/metrics\";\n    const response = await fetch(url, {\n      headers: APIData.headers\n    });\n    const daata = await response.json();\n    this.setState({\n      graph: daata,\n      loading: false\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.Refresh = () => {\n      window.location.reload(\"\");\n    };\n\n    this.changedata = function () {\n      this.state.series[0].data = [this.state.graph.ProcessCpuTime, this.state.graph.LoadAverage, this.state.graph.AvailableProcessors, this.state.graph.FreePhysicalMemorySize / 1024, this.state.graph.CPULoad * 100, this.state.graph.VirtulMemory / 1024];\n      this.state.options.xaxis.categories = ['ProcessCpuTime', 'LoadAverage', 'AvailableProcessors', 'FreePhysicalMemory(GB)', 'CPULoad*100', 'VirtulMemory(GB)'];\n    };\n\n    this.state = {\n      loading: true,\n      graph: null,\n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: []\n        }\n      },\n      series: [{\n        name: \"series-1\",\n        data: []\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mixed-chart\",\n            children: this.state.loading || !this.state.graph ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 54\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"graphs\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"carrybox\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"students\",\n                  children: /*#__PURE__*/_jsxDEV(AiIcons.AiFillCloseCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 5\n                }, this), this.changedata(), /*#__PURE__*/_jsxDEV(Chart, {\n                  options: this.state.options,\n                  series: this.state.series,\n                  type: \"bar\",\n                  width: \"80%\",\n                  \"margin-left\": \"auto\",\n                  \"margin-right\": \"auto\",\n                  color: \"orange\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.Refresh,\n                  children: \"Refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Admin/Graph.js"],"names":["React","Component","Chart","Link","AiIcons","Loading","APIData","Graph","componentDidMount","url","api","response","fetch","headers","daata","json","setState","graph","loading","constructor","props","Refresh","window","location","reload","changedata","state","series","data","ProcessCpuTime","LoadAverage","AvailableProcessors","FreePhysicalMemorySize","CPULoad","VirtulMemory","options","xaxis","categories","chart","id","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Link } from 'react-router-dom';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport Loading from \"../Loading\";\r\nimport {APIData} from '../Authentication/APIData';\r\nclass Graph extends Component {\r\n  async componentDidMount(){\r\n    const url = APIData.api+\"perf/metrics\";\r\n    const response = await fetch(url,{headers:APIData.headers});\r\n    const daata = await response.json();\r\n    this.setState({graph: daata, loading: false});\r\n} \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      graph: null,\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: []\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"series-1\",\r\n          data: []\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  Refresh = () => {\r\n    window.location.reload(\"\");\r\n  };\r\n   changedata = function(){\r\n\r\n    this.state.series[0].data = [this.state.graph.ProcessCpuTime,this.state.graph.LoadAverage,this.state.graph.AvailableProcessors,this.state.graph.FreePhysicalMemorySize / 1024,this.state.graph.CPULoad*100,this.state.graph.VirtulMemory / 1024 ]\r\n    this.state.options.xaxis.categories = ['ProcessCpuTime','LoadAverage','AvailableProcessors','FreePhysicalMemory(GB)','CPULoad*100','VirtulMemory(GB)']\r\n   }\r\n \r\n  render() {\r\n    return (\r\n        <div className=\"graph\">\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n          {this.state.loading || !this.state.graph ? <Loading /> : \r\n              <p className=\"graphs\">\r\n    <div className=\"carrybox\">\r\n        \r\n    <Link to=\"students\">\r\n                  <AiIcons.AiFillCloseCircle  />\r\n                  </Link>\r\n      {this.changedata()}\r\n    <Chart \r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"80%\"\r\n              margin-left = 'auto'\r\n              margin-right = 'auto'\r\n              color = \"orange\"\r\n            \r\n      \r\n              \r\n            /> \r\n    <button onClick={this.Refresh}>Refresh</button>\r\n    </div>\r\n              </p>}\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;"]},"metadata":{},"sourceType":"module"}