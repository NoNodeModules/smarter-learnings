{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 10\\\\WORKSPACE\\\\src\\\\Table\\\\AdminTimeTableData.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../CRUDTable.css\";\nimport { Component } from \"react\";\nimport { toast } from 'react-toastify';\nimport * as AiIcons from \"react-icons/ai\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport CRUDTable, { Fields, Field, CreateForm, UpdateForm, DeleteForm, Pagination } from \"react-crud-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure(); // Component's Base CSS\n//import \"./index.css\";\n\nconst DescriptionRenderer = ({\n  field\n}) => /*#__PURE__*/_jsxDEV(\"textarea\", { ...field\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 44\n}, this);\n\n_c = DescriptionRenderer;\nconsole.log();\nlet tasks = [];\n\nfunction getTask(testTask) {\n  tasks = testTask;\n  console.log(tasks);\n}\n\nfunction PostTimeTable(AdminTimeTable) {\n  console.log(AdminTimeTable);\n  var senddata = {\n    id: AdminTimeTable.id,\n    day: AdminTimeTable.day,\n    subject: AdminTimeTable.subject,\n    facultyname: AdminTimeTable.facultyname,\n    time: AdminTimeTable.time,\n    grade: AdminTimeTable.grade,\n    createdDate: AdminTimeTable.createdDate\n  };\n  axios.post('http://103.142.165.146:8080/smarter-learnings/timetable/', senddata).then(response => {\n    if (response.data.status == \"Success\") {\n      window.location.reload(\"/\");\n    } else {\n      toast('Update Failed');\n    }\n  }).catch(error => {\n    toast('Update Failed');\n  });\n}\n\n_c2 = PostTimeTable;\n\nfunction deleteTimeTable(AdminTimeTable) {\n  console.log(AdminTimeTable.id);\n  const url = 'http://103.142.165.146:8080/smarter-learnings/timetable/' + AdminTimeTable.id;\n  axios.delete(url).then(response => {\n    if (response.status == 200) {\n      window.location.reload(\"/\");\n    } else {\n      toast('Check With the courses,failed');\n    }\n  }).catch(error => {\n    toast(\"It's Time To Grab A Coffeee\");\n  });\n}\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"time\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"day\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"subject\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"facultyname\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"grade\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else if (data.field === \"createdDate\") {\n    sorter = data.direction === \"ascending\" ? SORTERS.STRING_ASCENDING(mapper) : SORTERS.STRING_DESCENDING(mapper);\n  } else {\n    sorter = data.direction === \"ascending\" ? SORTERS.NUMBER_ASCENDING(mapper) : SORTERS.NUMBER_DESCENDING(mapper);\n  }\n\n  return sorter;\n}; // let count = tasks.length;\n// console.log(count);\n\n\nconst service = {\n  fetchItems: payload => {\n    const {\n      activePage,\n      itemsPerPage\n    } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result.slice(start, end));\n  },\n  fetchTotal: payload => {\n    return Promise.resolve(tasks.length);\n  },\n  create: task => {\n    console.log(task);\n    tasks.push({});\n    PostTimeTable(task);\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    task.day = data.day;\n    task.subject = data.subject;\n    task.facultyname = data.facultyname;\n    task.time = data.time;\n    task.grade = data.grade;\n    task.createdDate = data.createdDate;\n    PostTimeTable(task);\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.id === data.id);\n    deleteTimeTable(task);\n    tasks = tasks.filter(t => t.id !== task.id);\n    return Promise.resolve(task);\n  }\n};\nconst styles = {\n  container: {\n    margin: \"auto\",\n    width: \"fit-content\"\n  }\n};\n\nconst TimeTabletest = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: styles.container,\n  children: /*#__PURE__*/_jsxDEV(CRUDTable, {\n    caption: \"TIME TABLE\",\n    fetchItems: payload => service.fetchItems(payload),\n    children: [/*#__PURE__*/_jsxDEV(Fields, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"id\",\n        label: \"ID\",\n        placeholder: \"Don't Enter the ID\",\n        type: \"number\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"day\",\n        label: \"Day\",\n        placeholder: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"subject\",\n        label: \"Subject\",\n        placeholder: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"facultyname\",\n        label: \"Faculty Name\",\n        placeholder: \"Faculty Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"time\",\n        label: \"Time\",\n        placeholder: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"grade\",\n        label: \"Grade\",\n        placeholder: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"createdDate\",\n        label: \"Created Date\",\n        placeholder: \"Created Date\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n      title: \"Time Table Creation\",\n      message: \"Create a new Time Table!\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlinePlusCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 18\n      }, this),\n      onSubmit: task => service.create(task),\n      submitText: \"Create\",\n      validate: values => {\n        const errors = {}; //     if (!values.id) {\n        //   errors.id = \"Please, provide Time Table ID\";\n        // }\n\n        if (!values.day) {\n          errors.day = \"Please, provide Day\";\n        }\n\n        if (!values.subject) {\n          errors.subject = \"Please, provide Subject\";\n        }\n\n        if (!values.facultyname) {\n          errors.facultyname = \"Please, provide Faculty Name\";\n        }\n\n        if (!values.time) {\n          errors.time = \"Please, provide Time\";\n        }\n\n        if (!values.grade) {\n          errors.grade = \"Please, provide Grade\";\n        }\n\n        if (!values.createdDate) {\n          errors.createdDate = \"Please, provide Created Date\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      title: \"Course Update Process\",\n      message: \"Update Course\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiFillEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }, this),\n      onSubmit: task => service.update(task),\n      submitText: \"Update\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.id) {\n          errors.id = \"Please, provide Course ID\";\n        }\n\n        if (!values.day) {\n          errors.day = \"Please, provide Course Description\";\n        }\n\n        if (!values.subject) {\n          errors.subject = \"Please, provide Course Type\";\n        }\n\n        if (!values.facultyname) {\n          errors.facultyname = \"Please, provide Course SubType\";\n        }\n\n        if (!values.time) {\n          errors.time = \"Please, provide Course Fees\";\n        }\n\n        if (!values.grade) {\n          errors.grade = \"Please, provide Course Duration\";\n        }\n\n        if (!values.createdDate) {\n          errors.createdDate = \"Please, provide Admin ID\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteForm, {\n      title: \"Course Delete Process\",\n      message: \"Are you sure you want to delete the Course?\",\n      trigger: /*#__PURE__*/_jsxDEV(AiIcons.AiFillDelete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 18\n      }, this),\n      onSubmit: task => service.delete(task),\n      submitText: \"Delete\",\n      validate: values => {\n        const errors = {};\n\n        if (!values.id) {\n          errors.id = \"Please, provide Course ID\";\n        }\n\n        if (!values.day) {\n          errors.id = \"Please, provide Course Description\";\n        }\n\n        if (!values.subject) {\n          errors.subject = \"Please, provide Course Type\";\n        }\n\n        if (!values.facultyname) {\n          errors.facultyname = \"Please, provide Course SubType\";\n        }\n\n        if (!values.time) {\n          errors.time = \"Please, provide Course Fees\";\n        }\n\n        if (!values.grade) {\n          errors.grade = \"Please, provide Course Duration\";\n        }\n\n        if (!values.createdDate) {\n          errors.createdDate = \"Please, provide Admin ID\";\n        }\n\n        return errors;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: 10,\n      activePage: 1,\n      fetchTotalOfItems: payload => service.fetchTotal(payload)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 177,\n  columnNumber: 3\n}, this);\n\n_c3 = TimeTabletest;\n\nclass AdminTimeTableData extends Component {\n  constructor(props) {\n    super(props);\n    getTask(this.props.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TimeTabletest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default AdminTimeTableData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionRenderer\");\n$RefreshReg$(_c2, \"PostTimeTable\");\n$RefreshReg$(_c3, \"TimeTabletest\");","map":{"version":3,"sources":["C:/Users/Dell 10/WORKSPACE/src/Table/AdminTimeTableData.js"],"names":["React","axios","Component","toast","AiIcons","CRUDTable","Fields","Field","CreateForm","UpdateForm","DeleteForm","Pagination","configure","DescriptionRenderer","field","console","log","tasks","getTask","testTask","PostTimeTable","AdminTimeTable","senddata","id","day","subject","facultyname","time","grade","createdDate","post","then","response","data","status","window","location","reload","catch","error","deleteTimeTable","url","delete","SORTERS","NUMBER_ASCENDING","mapper","a","b","NUMBER_DESCENDING","STRING_ASCENDING","localeCompare","STRING_DESCENDING","getSorter","x","sorter","direction","service","fetchItems","payload","activePage","itemsPerPage","pagination","start","end","result","Array","from","sort","Promise","resolve","slice","fetchTotal","length","create","task","push","update","find","t","filter","styles","container","margin","width","TimeTabletest","values","errors","AdminTimeTableData","constructor","props","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../CRUDTable.css\";\r\nimport { Component } from \"react\";\r\nimport { toast } from 'react-toastify';\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CRUDTable, {\r\n  Fields,\r\n  Field,\r\n  CreateForm,\r\n  UpdateForm,\r\n  DeleteForm,\r\n  Pagination\r\n} from \"react-crud-table\";\r\n\r\ntoast.configure()\r\n\r\n// Component's Base CSS\r\n//import \"./index.css\";\r\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\r\nconsole.log();\r\nlet tasks = [];\r\n\r\nfunction  getTask(testTask){\r\n  tasks = testTask;\r\n  console.log(tasks);\r\n}\r\n\r\nfunction PostTimeTable(AdminTimeTable){\r\n  console.log(AdminTimeTable)\r\n  var senddata={\r\n    id:AdminTimeTable.id,\r\n    day : AdminTimeTable.day,\r\n    subject : AdminTimeTable.subject,\r\n    facultyname : AdminTimeTable.facultyname,\r\n    time : AdminTimeTable.time,\r\n    grade : AdminTimeTable.grade,\r\n    createdDate : AdminTimeTable.createdDate\r\n  }\r\naxios\r\n      .post('http://103.142.165.146:8080/smarter-learnings/timetable/', senddata )\r\n      .then(response => {\r\n        if(response.data.status ==\"Success\"){\r\n          window.location.reload(\"/\");\r\n        }\r\n        else{\r\n          toast('Update Failed')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        toast('Update Failed')\r\n      })\r\n}\r\n\r\nfunction deleteTimeTable(AdminTimeTable){\r\n  console.log(AdminTimeTable.id);\r\n  const url = 'http://103.142.165.146:8080/smarter-learnings/timetable/' + AdminTimeTable.id;\r\n  axios\r\n        .delete(url)\r\n        .then(response => {\r\n          if(response.status==200){\r\n            window.location.reload(\"/\");\r\n           }\r\n           else{\r\n             toast('Check With the courses,failed')\r\n           }\r\n        })\r\n        .catch(error => {\r\n          toast(\"It's Time To Grab A Coffeee\")\r\n        })\r\n  }\r\nconst SORTERS = {\r\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\r\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\r\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\r\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\r\n};\r\n\r\nconst getSorter = data => {\r\n  const mapper = x => x[data.field];\r\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\r\n\r\n  if (data.field === \"time\") {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  } \r\n  else if (data.field === \"day\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"subject\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"facultyname\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"grade\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else if (data.field === \"createdDate\"){\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.STRING_ASCENDING(mapper)\r\n        : SORTERS.STRING_DESCENDING(mapper);\r\n  }\r\n  else {\r\n    sorter =\r\n      data.direction === \"ascending\"\r\n        ? SORTERS.NUMBER_ASCENDING(mapper)\r\n        : SORTERS.NUMBER_DESCENDING(mapper);\r\n  }\r\n\r\n  return sorter;\r\n};\r\n\r\n// let count = tasks.length;\r\n// console.log(count);\r\nconst service = {\r\n  fetchItems: payload => {\r\n    const { activePage, itemsPerPage } = payload.pagination;\r\n    const start = (activePage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    let result = Array.from(tasks);\r\n    result = result.sort(getSorter(payload.sort));\r\n    return Promise.resolve(result.slice(start, end));\r\n  },\r\n  fetchTotal: payload => {\r\n    return Promise.resolve(tasks.length);\r\n  },\r\n  create: task => {\r\n    console.log(task)\r\n    tasks.push({\r\n    });\r\n    PostTimeTable(task);\r\n    return Promise.resolve(task);\r\n  },\r\n  update: data => {\r\n    const task = tasks.find(t => t.id === data.id);\r\n    task.day = data.day;\r\n    task.subject = data.subject;\r\n    task.facultyname = data.facultyname;\r\n    task.time = data.time;\r\n    task.grade = data.grade;\r\n    task.createdDate = data.createdDate;\r\n    PostTimeTable(task);\r\n    return Promise.resolve(task);\r\n  },\r\n   delete: data => {\r\n     const task = tasks.find(t => t.id === data.id);\r\n     deleteTimeTable(task);\r\n     tasks = tasks.filter(t => t.id !== task.id);\r\n     return Promise.resolve(task);\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container: { margin: \"auto\", width: \"fit-content\" }\r\n};\r\n\r\nconst TimeTabletest = () => (\r\n  \r\n  \r\n  <div style={styles.container}>\r\n    <CRUDTable\r\n      caption=\"TIME TABLE\"\r\n      fetchItems={payload => service.fetchItems(payload)}\r\n    >\r\n      <Fields>\r\n        <Field name=\"id\" label=\"ID\" placeholder=\"Don't Enter the ID\" type=\"number\" readOnly />\r\n        <Field name=\"day\" label=\"Day\" placeholder=\"Day\"  />\r\n        <Field name=\"subject\" label=\"Subject\" placeholder=\"Subject\" />\r\n        <Field name=\"facultyname\" label=\"Faculty Name\" placeholder=\"Faculty Name\" />\r\n        <Field name=\"time\" label=\"Time\" placeholder=\"Time\" />\r\n        <Field name=\"grade\" label=\"Grade\" placeholder=\"Grade\" />\r\n        <Field name=\"createdDate\" label=\"Created Date\" placeholder=\"Created Date\" type=\"date\"/>\r\n      </Fields>\r\n      <CreateForm\r\n        title=\"Time Table Creation\"\r\n        message=\"Create a new Time Table!\"\r\n        trigger={<AiIcons.AiOutlinePlusCircle/>}\r\n        onSubmit={task => service.create(task)}\r\n        submitText=\"Create\"\r\n        validate={values => {\r\n          const errors = {};\r\n          //     if (!values.id) {\r\n          //   errors.id = \"Please, provide Time Table ID\";\r\n          // }\r\n\r\n          if (!values.day) {\r\n            errors.day = \"Please, provide Day\";\r\n          }\r\n\r\n          if (!values.subject) {\r\n            errors.subject = \"Please, provide Subject\";\r\n          }\r\n\r\n          if (!values.facultyname) {\r\n            errors.facultyname = \"Please, provide Faculty Name\";\r\n          }\r\n          if (!values.time) {\r\n            errors.time = \"Please, provide Time\";\r\n          }\r\n          if (!values.grade) {\r\n            errors.grade = \"Please, provide Grade\";\r\n          }\r\n          if (!values.createdDate) {\r\n            errors.createdDate = \"Please, provide Created Date\";\r\n          }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n\r\n      <UpdateForm\r\n        title=\"Course Update Process\"\r\n        message=\"Update Course\"\r\n        trigger= {<AiIcons.AiFillEdit />}\r\n        onSubmit={task => service.update(task)}\r\n        submitText=\"Update\"\r\n        validate={values => {\r\n          const errors = {};\r\n\r\n          if (!values.id) {\r\n            errors.id = \"Please, provide Course ID\";\r\n          }\r\n\r\n          if (!values.day) {\r\n            errors.day = \"Please, provide Course Description\";\r\n          }\r\n\r\n          if (!values.subject) {\r\n            errors.subject = \"Please, provide Course Type\";\r\n          }\r\n\r\n          if (!values.facultyname) {\r\n            errors.facultyname = \"Please, provide Course SubType\";\r\n          }\r\n          if (!values.time) {\r\n            errors.time = \"Please, provide Course Fees\";\r\n          }\r\n          if (!values.grade) {\r\n            errors.grade = \"Please, provide Course Duration\";\r\n          }\r\n          if (!values.createdDate) {\r\n            errors.createdDate = \"Please, provide Admin ID\";\r\n          }\r\n\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <DeleteForm\r\n        title=\"Course Delete Process\"\r\n        message=\"Are you sure you want to delete the Course?\"\r\n        trigger={<AiIcons.AiFillDelete />}\r\n        onSubmit={task => service.delete(task)}\r\n        submitText=\"Delete\"\r\n        validate={values => {\r\n          const errors = {};\r\n              if (!values.id) {\r\n            errors.id = \"Please, provide Course ID\";\r\n          }\r\n\r\n          if (!values.day) {\r\n            errors.id = \"Please, provide Course Description\";\r\n          }\r\n\r\n          if (!values.subject) {\r\n            errors.subject = \"Please, provide Course Type\";\r\n          }\r\n\r\n          if (!values.facultyname) {\r\n            errors.facultyname = \"Please, provide Course SubType\";\r\n          }\r\n          if (!values.time) {\r\n            errors.time = \"Please, provide Course Fees\";\r\n          }\r\n          if (!values.grade) {\r\n            errors.grade = \"Please, provide Course Duration\";\r\n          }\r\n          if (!values.createdDate) {\r\n            errors.createdDate = \"Please, provide Admin ID\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      />\r\n      <Pagination\r\n        itemsPerPage={10}\r\n        activePage = {1}\r\n        fetchTotalOfItems={payload => service.fetchTotal(payload)}\r\n      />\r\n    </CRUDTable>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nclass AdminTimeTableData extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        getTask(this.props.data);\r\n        }\r\n    render() { \r\n      return ( <div>\r\n      <TimeTabletest/> \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n   \r\n  export default AdminTimeTableData;"]},"metadata":{},"sourceType":"module"}